// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module TrellisBuilder_TrellisBuilder_Pipeline_VITIS_LOOP_1453_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_Result_s,
        prevState_V_28_load,
        Bucket_V,
        choice_0_0_reload,
        choice_1_0_reload,
        choice_2_0_reload,
        choice_0_1_0_reload,
        choice_1_1_0_reload,
        choice_2_1_0_reload,
        choice_0_2_0_reload,
        choice_1_2_0_reload,
        choice_2_2_0_reload,
        choice_0_3_0_reload,
        choice_1_3_0_reload,
        choice_2_3_0_reload,
        choice_0_4_0_reload,
        choice_1_4_0_reload,
        choice_2_4_0_reload,
        choice_0_5_0_reload,
        choice_1_5_0_reload,
        choice_2_5_0_reload,
        choice_0_6_0_reload,
        choice_1_6_0_reload,
        choice_2_6_0_reload,
        choice_0_7_0_reload,
        choice_1_7_0_reload,
        choice_2_7_0_reload,
        choice_0_8_0_reload,
        choice_1_8_0_reload,
        choice_2_8_0_reload,
        choice_0_9_0_reload,
        choice_1_9_0_reload,
        choice_2_9_0_reload,
        choice_0_10_0_reload,
        choice_1_10_0_reload,
        choice_2_10_0_reload,
        choice_0_11_0_reload,
        choice_1_11_0_reload,
        choice_2_11_0_reload,
        choice_0_12_0_reload,
        choice_1_12_0_reload,
        choice_2_12_0_reload,
        choice_0_13_0_reload,
        choice_1_13_0_reload,
        choice_2_13_0_reload,
        choice_0_14_0_reload,
        choice_1_14_0_reload,
        p_Repl2_reload,
        choice_0_15_0_reload,
        choice_1_15_0_reload,
        choice_2_15_0_reload,
        choice_0_16_0_reload,
        choice_1_16_0_reload,
        choice_2_16_0_reload,
        choice_0_17_0_reload,
        choice_1_17_0_reload,
        choice_2_17_0_reload,
        choice_0_18_0_reload,
        choice_1_18_0_reload,
        choice_2_18_0_reload,
        choice_0_19_0_reload,
        choice_1_19_0_reload,
        choice_2_19_0_reload,
        choice_0_20_0_reload,
        choice_1_20_0_reload,
        choice_2_20_0_reload,
        choice_0_21_0_reload,
        choice_1_21_0_reload,
        choice_2_21_0_reload,
        choice_0_22_0_reload,
        choice_1_22_0_reload,
        choice_2_22_0_reload,
        choice_0_23_0_reload,
        choice_1_23_0_reload,
        choice_2_23_0_reload,
        choice_0_24_0_reload,
        choice_1_24_0_reload,
        choice_2_24_0_reload,
        choice_0_25_0_reload,
        choice_1_25_0_reload,
        choice_2_25_0_reload,
        choice_0_26_0_reload,
        choice_1_26_0_reload,
        choice_2_26_0_reload,
        choice_0_27_0_reload,
        choice_1_27_0_reload,
        choice_2_27_0_reload,
        choice_0_28_0_reload,
        choice_1_28_0_reload,
        choice_2_28_0_reload,
        choice_0_29_0_reload,
        choice_1_29_0_reload,
        choice_2_29_0_reload,
        choice_0_30_0_reload,
        choice_1_30_0_reload,
        choice_2_30_0_reload,
        choice_0_31_0_reload,
        choice_1_31_0_reload,
        choice_2_31_0_reload,
        choice_0_32_0_reload,
        choice_1_32_0_reload,
        choice_2_32_0_reload,
        choice_0_33_0_reload,
        choice_1_33_0_reload,
        choice_2_33_0_reload,
        choice_0_34_0_reload,
        choice_1_34_0_reload,
        choice_2_34_0_reload,
        choice_0_35_0_reload,
        choice_1_35_0_reload,
        choice_2_35_0_reload,
        choice_0_36_0_reload,
        choice_1_36_0_reload,
        choice_2_36_0_reload,
        choice_0_37_0_reload,
        choice_1_37_0_reload,
        choice_2_37_0_reload,
        choice_0_38_0_reload,
        choice_1_38_0_reload,
        choice_2_38_0_reload,
        choice_0_39_0_reload,
        choice_1_39_0_reload,
        choice_2_39_0_reload,
        choice_0_40_0_reload,
        choice_1_40_0_reload,
        choice_2_40_0_reload,
        choice_0_41_0_reload,
        choice_1_41_0_reload,
        choice_2_41_0_reload,
        choice_0_42_0_reload,
        choice_1_42_0_reload,
        choice_2_42_0_reload,
        choice_0_43_0_reload,
        choice_1_43_0_reload,
        choice_2_43_0_reload,
        choice_0_44_0_reload,
        choice_1_44_0_reload,
        choice_2_44_0_reload,
        choice_0_45_0_reload,
        choice_1_45_0_reload,
        choice_2_45_0_reload,
        choice_0_46_0_reload,
        choice_1_46_0_reload,
        choice_2_46_0_reload,
        choice_0_47_0_reload,
        choice_1_47_0_reload,
        choice_2_47_0_reload,
        choice_0_48_0_reload,
        choice_1_48_0_reload,
        choice_2_48_0_reload,
        choice_0_49_0_reload,
        choice_1_49_0_reload,
        choice_2_49_0_reload,
        choice_0_50_0_reload,
        choice_1_50_0_reload,
        choice_2_50_0_reload,
        choice_0_51_0_reload,
        choice_1_51_0_reload,
        choice_2_51_0_reload,
        choice_0_52_0_reload,
        choice_1_52_0_reload,
        choice_2_52_0_reload,
        choice_0_53_0_reload,
        choice_1_53_0_reload,
        choice_2_53_0_reload,
        choice_0_54_0_reload,
        choice_1_54_0_reload,
        choice_2_54_0_reload,
        choice_0_55_0_reload,
        choice_1_55_0_reload,
        choice_2_55_0_reload,
        choice_0_56_0_reload,
        choice_1_56_0_reload,
        choice_2_56_0_reload,
        choice_0_57_0_reload,
        choice_1_57_0_reload,
        choice_2_57_0_reload,
        choice_0_58_0_reload,
        choice_1_58_0_reload,
        choice_2_58_0_reload,
        choice_0_59_0_reload,
        choice_1_59_0_reload,
        choice_2_59_0_reload,
        choice_0_60_0_reload,
        choice_1_60_0_reload,
        choice_2_60_0_reload,
        choice_0_61_0_reload,
        choice_1_61_0_reload,
        choice_2_61_0_reload,
        choice_0_62_0_reload,
        choice_1_62_0_reload,
        choice_2_62_0_reload,
        choice_0_63_0_reload,
        choice_1_63_0_reload,
        choice_2_63_0_reload,
        choice_0_64_0_reload,
        choice_1_64_0_reload,
        choice_2_64_0_reload,
        choice_0_65_0_reload,
        choice_1_65_0_reload,
        choice_2_65_0_reload,
        choice_0_66_0_reload,
        choice_1_66_0_reload,
        choice_2_66_0_reload,
        choice_0_67_0_reload,
        choice_1_67_0_reload,
        choice_2_67_0_reload,
        choice_0_68_0_reload,
        choice_1_68_0_reload,
        choice_2_68_0_reload,
        choice_0_69_0_reload,
        choice_1_69_0_reload,
        choice_2_69_0_reload,
        choice_0_70_0_reload,
        choice_1_70_0_reload,
        choice_2_70_0_reload,
        choice_0_71_0_reload,
        choice_1_71_0_reload,
        choice_2_71_0_reload,
        choice_0_72_0_reload,
        choice_1_72_0_reload,
        choice_2_72_0_reload,
        choice_0_73_0_reload,
        choice_1_73_0_reload,
        choice_2_73_0_reload,
        choice_0_74_0_reload,
        choice_1_74_0_reload,
        choice_2_74_0_reload,
        choice_0_75_0_reload,
        choice_1_75_0_reload,
        choice_2_75_0_reload,
        choice_0_76_0_reload,
        choice_1_76_0_reload,
        choice_2_76_0_reload,
        choice_0_77_0_reload,
        choice_1_77_0_reload,
        choice_2_77_0_reload,
        choice_0_78_0_reload,
        choice_1_78_0_reload,
        choice_2_78_0_reload,
        choice_0_79_0_reload,
        choice_1_79_0_reload,
        choice_2_79_0_reload,
        choice_0_80_0_reload,
        choice_1_80_0_reload,
        choice_2_80_0_reload,
        choice_0_81_0_reload,
        choice_1_81_0_reload,
        choice_2_81_0_reload,
        choice_0_82_0_reload,
        choice_1_82_0_reload,
        choice_2_82_0_reload,
        choice_0_83_0_reload,
        choice_1_83_0_reload,
        choice_2_83_0_reload,
        choice_0_84_0_reload,
        choice_1_84_0_reload,
        choice_2_84_0_reload,
        choice_0_85_0_reload,
        choice_1_85_0_reload,
        choice_2_85_0_reload,
        choice_0_86_0_reload,
        choice_1_86_0_reload,
        choice_2_86_0_reload,
        choice_0_87_0_reload,
        choice_1_87_0_reload,
        choice_2_87_0_reload,
        choice_0_88_0_reload,
        choice_1_88_0_reload,
        choice_2_88_0_reload,
        choice_0_89_0_reload,
        choice_1_89_0_reload,
        choice_2_89_0_reload,
        choice_0_90_0_reload,
        choice_1_90_0_reload,
        choice_2_90_0_reload,
        choice_0_91_0_reload,
        choice_1_91_0_reload,
        choice_2_91_0_reload,
        choice_0_92_0_reload,
        choice_1_92_0_reload,
        choice_2_92_0_reload,
        choice_0_93_0_reload,
        choice_1_93_0_reload,
        choice_2_93_0_reload,
        choice_0_94_0_reload,
        choice_1_94_0_reload,
        choice_2_94_0_reload,
        choice_0_95_0_reload,
        choice_1_95_0_reload,
        choice_2_95_0_reload,
        choice_0_96_0_reload,
        choice_1_96_0_reload,
        choice_2_96_0_reload,
        choice_0_97_0_reload,
        choice_1_97_0_reload,
        choice_2_97_0_reload,
        choice_0_98_0_reload,
        choice_1_98_0_reload,
        choice_2_98_0_reload,
        choice_0_99_0_reload,
        choice_1_99_0_reload,
        choice_2_99_0_reload,
        choice_0_100_0_reload,
        choice_1_100_0_reload,
        choice_2_100_0_reload,
        choice_0_101_0_reload,
        choice_1_101_0_reload,
        choice_2_101_0_reload,
        choice_0_102_0_reload,
        choice_1_102_0_reload,
        choice_2_102_0_reload,
        choice_0_103_0_reload,
        choice_1_103_0_reload,
        choice_2_103_0_reload,
        choice_0_104_0_reload,
        choice_1_104_0_reload,
        choice_2_104_0_reload,
        choice_0_105_0_reload,
        choice_1_105_0_reload,
        choice_2_105_0_reload,
        choice_0_106_0_reload,
        choice_1_106_0_reload,
        choice_2_106_0_reload,
        choice_0_107_0_reload,
        choice_1_107_0_reload,
        choice_2_107_0_reload,
        choice_0_108_0_reload,
        choice_1_108_0_reload,
        choice_2_108_0_reload,
        choice_0_109_0_reload,
        choice_1_109_0_reload,
        choice_2_109_0_reload,
        choice_0_110_0_reload,
        choice_1_110_0_reload,
        choice_2_110_0_reload,
        choice_0_111_0_reload,
        choice_1_111_0_reload,
        choice_2_111_0_reload,
        choice_0_112_0_reload,
        choice_1_112_0_reload,
        choice_2_112_0_reload,
        choice_0_113_0_reload,
        choice_1_113_0_reload,
        choice_2_113_0_reload,
        choice_0_114_0_reload,
        choice_1_114_0_reload,
        choice_2_114_0_reload,
        choice_0_115_0_reload,
        choice_1_115_0_reload,
        choice_2_115_0_reload,
        choice_0_116_0_reload,
        choice_1_116_0_reload,
        choice_2_116_0_reload,
        choice_0_117_0_reload,
        choice_1_117_0_reload,
        choice_2_117_0_reload,
        choice_0_118_0_reload,
        choice_1_118_0_reload,
        choice_2_118_0_reload,
        choice_0_119_0_reload,
        choice_1_119_0_reload,
        choice_2_119_0_reload,
        prevState_V_address0,
        prevState_V_ce0,
        prevState_V_q0,
        prevState_V_1_address0,
        prevState_V_1_ce0,
        prevState_V_1_q0,
        prevState_V_2_address0,
        prevState_V_2_ce0,
        prevState_V_2_q0,
        prevState_V_3_address0,
        prevState_V_3_ce0,
        prevState_V_3_q0,
        prevState_V_4_address0,
        prevState_V_4_ce0,
        prevState_V_4_q0,
        prevState_V_5_address0,
        prevState_V_5_ce0,
        prevState_V_5_q0,
        prevState_V_6_address0,
        prevState_V_6_ce0,
        prevState_V_6_q0,
        prevState_V_7_address0,
        prevState_V_7_ce0,
        prevState_V_7_q0,
        prevState_V_8_address0,
        prevState_V_8_ce0,
        prevState_V_8_q0,
        prevState_V_9_address0,
        prevState_V_9_ce0,
        prevState_V_9_q0,
        prevState_V_10_address0,
        prevState_V_10_ce0,
        prevState_V_10_q0,
        prevState_V_11_address0,
        prevState_V_11_ce0,
        prevState_V_11_q0,
        prevState_V_12_address0,
        prevState_V_12_ce0,
        prevState_V_12_q0,
        prevState_V_13_address0,
        prevState_V_13_ce0,
        prevState_V_13_q0,
        prevState_V_14_address0,
        prevState_V_14_ce0,
        prevState_V_14_q0,
        prevState_V_15_address0,
        prevState_V_15_ce0,
        prevState_V_15_q0,
        prevState_V_16_address0,
        prevState_V_16_ce0,
        prevState_V_16_q0,
        prevState_V_17_address0,
        prevState_V_17_ce0,
        prevState_V_17_q0,
        prevState_V_18_address0,
        prevState_V_18_ce0,
        prevState_V_18_q0,
        prevState_V_19_address0,
        prevState_V_19_ce0,
        prevState_V_19_q0,
        prevState_V_20_address0,
        prevState_V_20_ce0,
        prevState_V_20_q0,
        prevState_V_21_address0,
        prevState_V_21_ce0,
        prevState_V_21_q0,
        prevState_V_22_address0,
        prevState_V_22_ce0,
        prevState_V_22_q0,
        prevState_V_23_address0,
        prevState_V_23_ce0,
        prevState_V_23_q0,
        prevState_V_24_address0,
        prevState_V_24_ce0,
        prevState_V_24_q0,
        prevState_V_25_address0,
        prevState_V_25_ce0,
        prevState_V_25_q0,
        prevState_V_26_address0,
        prevState_V_26_ce0,
        prevState_V_26_q0,
        prevState_V_27_address0,
        prevState_V_27_ce0,
        prevState_V_27_q0,
        prevState_V_28_address0,
        prevState_V_28_ce0,
        prevState_V_28_q0,
        prevState_V_29_address0,
        prevState_V_29_ce0,
        prevState_V_29_q0,
        p_Val2_1_out,
        p_Val2_1_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [47:0] p_Result_s;
input  [2:0] prevState_V_28_load;
input  [2:0] Bucket_V;
input  [0:0] choice_0_0_reload;
input  [0:0] choice_1_0_reload;
input  [0:0] choice_2_0_reload;
input  [0:0] choice_0_1_0_reload;
input  [0:0] choice_1_1_0_reload;
input  [0:0] choice_2_1_0_reload;
input  [0:0] choice_0_2_0_reload;
input  [0:0] choice_1_2_0_reload;
input  [0:0] choice_2_2_0_reload;
input  [0:0] choice_0_3_0_reload;
input  [0:0] choice_1_3_0_reload;
input  [0:0] choice_2_3_0_reload;
input  [0:0] choice_0_4_0_reload;
input  [0:0] choice_1_4_0_reload;
input  [0:0] choice_2_4_0_reload;
input  [0:0] choice_0_5_0_reload;
input  [0:0] choice_1_5_0_reload;
input  [0:0] choice_2_5_0_reload;
input  [0:0] choice_0_6_0_reload;
input  [0:0] choice_1_6_0_reload;
input  [0:0] choice_2_6_0_reload;
input  [0:0] choice_0_7_0_reload;
input  [0:0] choice_1_7_0_reload;
input  [0:0] choice_2_7_0_reload;
input  [0:0] choice_0_8_0_reload;
input  [0:0] choice_1_8_0_reload;
input  [0:0] choice_2_8_0_reload;
input  [0:0] choice_0_9_0_reload;
input  [0:0] choice_1_9_0_reload;
input  [0:0] choice_2_9_0_reload;
input  [0:0] choice_0_10_0_reload;
input  [0:0] choice_1_10_0_reload;
input  [0:0] choice_2_10_0_reload;
input  [0:0] choice_0_11_0_reload;
input  [0:0] choice_1_11_0_reload;
input  [0:0] choice_2_11_0_reload;
input  [0:0] choice_0_12_0_reload;
input  [0:0] choice_1_12_0_reload;
input  [0:0] choice_2_12_0_reload;
input  [0:0] choice_0_13_0_reload;
input  [0:0] choice_1_13_0_reload;
input  [0:0] choice_2_13_0_reload;
input  [0:0] choice_0_14_0_reload;
input  [0:0] choice_1_14_0_reload;
input  [0:0] p_Repl2_reload;
input  [0:0] choice_0_15_0_reload;
input  [0:0] choice_1_15_0_reload;
input  [0:0] choice_2_15_0_reload;
input  [0:0] choice_0_16_0_reload;
input  [0:0] choice_1_16_0_reload;
input  [0:0] choice_2_16_0_reload;
input  [0:0] choice_0_17_0_reload;
input  [0:0] choice_1_17_0_reload;
input  [0:0] choice_2_17_0_reload;
input  [0:0] choice_0_18_0_reload;
input  [0:0] choice_1_18_0_reload;
input  [0:0] choice_2_18_0_reload;
input  [0:0] choice_0_19_0_reload;
input  [0:0] choice_1_19_0_reload;
input  [0:0] choice_2_19_0_reload;
input  [0:0] choice_0_20_0_reload;
input  [0:0] choice_1_20_0_reload;
input  [0:0] choice_2_20_0_reload;
input  [0:0] choice_0_21_0_reload;
input  [0:0] choice_1_21_0_reload;
input  [0:0] choice_2_21_0_reload;
input  [0:0] choice_0_22_0_reload;
input  [0:0] choice_1_22_0_reload;
input  [0:0] choice_2_22_0_reload;
input  [0:0] choice_0_23_0_reload;
input  [0:0] choice_1_23_0_reload;
input  [0:0] choice_2_23_0_reload;
input  [0:0] choice_0_24_0_reload;
input  [0:0] choice_1_24_0_reload;
input  [0:0] choice_2_24_0_reload;
input  [0:0] choice_0_25_0_reload;
input  [0:0] choice_1_25_0_reload;
input  [0:0] choice_2_25_0_reload;
input  [0:0] choice_0_26_0_reload;
input  [0:0] choice_1_26_0_reload;
input  [0:0] choice_2_26_0_reload;
input  [0:0] choice_0_27_0_reload;
input  [0:0] choice_1_27_0_reload;
input  [0:0] choice_2_27_0_reload;
input  [0:0] choice_0_28_0_reload;
input  [0:0] choice_1_28_0_reload;
input  [0:0] choice_2_28_0_reload;
input  [0:0] choice_0_29_0_reload;
input  [0:0] choice_1_29_0_reload;
input  [0:0] choice_2_29_0_reload;
input  [0:0] choice_0_30_0_reload;
input  [0:0] choice_1_30_0_reload;
input  [0:0] choice_2_30_0_reload;
input  [0:0] choice_0_31_0_reload;
input  [0:0] choice_1_31_0_reload;
input  [0:0] choice_2_31_0_reload;
input  [0:0] choice_0_32_0_reload;
input  [0:0] choice_1_32_0_reload;
input  [0:0] choice_2_32_0_reload;
input  [0:0] choice_0_33_0_reload;
input  [0:0] choice_1_33_0_reload;
input  [0:0] choice_2_33_0_reload;
input  [0:0] choice_0_34_0_reload;
input  [0:0] choice_1_34_0_reload;
input  [0:0] choice_2_34_0_reload;
input  [0:0] choice_0_35_0_reload;
input  [0:0] choice_1_35_0_reload;
input  [0:0] choice_2_35_0_reload;
input  [0:0] choice_0_36_0_reload;
input  [0:0] choice_1_36_0_reload;
input  [0:0] choice_2_36_0_reload;
input  [0:0] choice_0_37_0_reload;
input  [0:0] choice_1_37_0_reload;
input  [0:0] choice_2_37_0_reload;
input  [0:0] choice_0_38_0_reload;
input  [0:0] choice_1_38_0_reload;
input  [0:0] choice_2_38_0_reload;
input  [0:0] choice_0_39_0_reload;
input  [0:0] choice_1_39_0_reload;
input  [0:0] choice_2_39_0_reload;
input  [0:0] choice_0_40_0_reload;
input  [0:0] choice_1_40_0_reload;
input  [0:0] choice_2_40_0_reload;
input  [0:0] choice_0_41_0_reload;
input  [0:0] choice_1_41_0_reload;
input  [0:0] choice_2_41_0_reload;
input  [0:0] choice_0_42_0_reload;
input  [0:0] choice_1_42_0_reload;
input  [0:0] choice_2_42_0_reload;
input  [0:0] choice_0_43_0_reload;
input  [0:0] choice_1_43_0_reload;
input  [0:0] choice_2_43_0_reload;
input  [0:0] choice_0_44_0_reload;
input  [0:0] choice_1_44_0_reload;
input  [0:0] choice_2_44_0_reload;
input  [0:0] choice_0_45_0_reload;
input  [0:0] choice_1_45_0_reload;
input  [0:0] choice_2_45_0_reload;
input  [0:0] choice_0_46_0_reload;
input  [0:0] choice_1_46_0_reload;
input  [0:0] choice_2_46_0_reload;
input  [0:0] choice_0_47_0_reload;
input  [0:0] choice_1_47_0_reload;
input  [0:0] choice_2_47_0_reload;
input  [0:0] choice_0_48_0_reload;
input  [0:0] choice_1_48_0_reload;
input  [0:0] choice_2_48_0_reload;
input  [0:0] choice_0_49_0_reload;
input  [0:0] choice_1_49_0_reload;
input  [0:0] choice_2_49_0_reload;
input  [0:0] choice_0_50_0_reload;
input  [0:0] choice_1_50_0_reload;
input  [0:0] choice_2_50_0_reload;
input  [0:0] choice_0_51_0_reload;
input  [0:0] choice_1_51_0_reload;
input  [0:0] choice_2_51_0_reload;
input  [0:0] choice_0_52_0_reload;
input  [0:0] choice_1_52_0_reload;
input  [0:0] choice_2_52_0_reload;
input  [0:0] choice_0_53_0_reload;
input  [0:0] choice_1_53_0_reload;
input  [0:0] choice_2_53_0_reload;
input  [0:0] choice_0_54_0_reload;
input  [0:0] choice_1_54_0_reload;
input  [0:0] choice_2_54_0_reload;
input  [0:0] choice_0_55_0_reload;
input  [0:0] choice_1_55_0_reload;
input  [0:0] choice_2_55_0_reload;
input  [0:0] choice_0_56_0_reload;
input  [0:0] choice_1_56_0_reload;
input  [0:0] choice_2_56_0_reload;
input  [0:0] choice_0_57_0_reload;
input  [0:0] choice_1_57_0_reload;
input  [0:0] choice_2_57_0_reload;
input  [0:0] choice_0_58_0_reload;
input  [0:0] choice_1_58_0_reload;
input  [0:0] choice_2_58_0_reload;
input  [0:0] choice_0_59_0_reload;
input  [0:0] choice_1_59_0_reload;
input  [0:0] choice_2_59_0_reload;
input  [0:0] choice_0_60_0_reload;
input  [0:0] choice_1_60_0_reload;
input  [0:0] choice_2_60_0_reload;
input  [0:0] choice_0_61_0_reload;
input  [0:0] choice_1_61_0_reload;
input  [0:0] choice_2_61_0_reload;
input  [0:0] choice_0_62_0_reload;
input  [0:0] choice_1_62_0_reload;
input  [0:0] choice_2_62_0_reload;
input  [0:0] choice_0_63_0_reload;
input  [0:0] choice_1_63_0_reload;
input  [0:0] choice_2_63_0_reload;
input  [0:0] choice_0_64_0_reload;
input  [0:0] choice_1_64_0_reload;
input  [0:0] choice_2_64_0_reload;
input  [0:0] choice_0_65_0_reload;
input  [0:0] choice_1_65_0_reload;
input  [0:0] choice_2_65_0_reload;
input  [0:0] choice_0_66_0_reload;
input  [0:0] choice_1_66_0_reload;
input  [0:0] choice_2_66_0_reload;
input  [0:0] choice_0_67_0_reload;
input  [0:0] choice_1_67_0_reload;
input  [0:0] choice_2_67_0_reload;
input  [0:0] choice_0_68_0_reload;
input  [0:0] choice_1_68_0_reload;
input  [0:0] choice_2_68_0_reload;
input  [0:0] choice_0_69_0_reload;
input  [0:0] choice_1_69_0_reload;
input  [0:0] choice_2_69_0_reload;
input  [0:0] choice_0_70_0_reload;
input  [0:0] choice_1_70_0_reload;
input  [0:0] choice_2_70_0_reload;
input  [0:0] choice_0_71_0_reload;
input  [0:0] choice_1_71_0_reload;
input  [0:0] choice_2_71_0_reload;
input  [0:0] choice_0_72_0_reload;
input  [0:0] choice_1_72_0_reload;
input  [0:0] choice_2_72_0_reload;
input  [0:0] choice_0_73_0_reload;
input  [0:0] choice_1_73_0_reload;
input  [0:0] choice_2_73_0_reload;
input  [0:0] choice_0_74_0_reload;
input  [0:0] choice_1_74_0_reload;
input  [0:0] choice_2_74_0_reload;
input  [0:0] choice_0_75_0_reload;
input  [0:0] choice_1_75_0_reload;
input  [0:0] choice_2_75_0_reload;
input  [0:0] choice_0_76_0_reload;
input  [0:0] choice_1_76_0_reload;
input  [0:0] choice_2_76_0_reload;
input  [0:0] choice_0_77_0_reload;
input  [0:0] choice_1_77_0_reload;
input  [0:0] choice_2_77_0_reload;
input  [0:0] choice_0_78_0_reload;
input  [0:0] choice_1_78_0_reload;
input  [0:0] choice_2_78_0_reload;
input  [0:0] choice_0_79_0_reload;
input  [0:0] choice_1_79_0_reload;
input  [0:0] choice_2_79_0_reload;
input  [0:0] choice_0_80_0_reload;
input  [0:0] choice_1_80_0_reload;
input  [0:0] choice_2_80_0_reload;
input  [0:0] choice_0_81_0_reload;
input  [0:0] choice_1_81_0_reload;
input  [0:0] choice_2_81_0_reload;
input  [0:0] choice_0_82_0_reload;
input  [0:0] choice_1_82_0_reload;
input  [0:0] choice_2_82_0_reload;
input  [0:0] choice_0_83_0_reload;
input  [0:0] choice_1_83_0_reload;
input  [0:0] choice_2_83_0_reload;
input  [0:0] choice_0_84_0_reload;
input  [0:0] choice_1_84_0_reload;
input  [0:0] choice_2_84_0_reload;
input  [0:0] choice_0_85_0_reload;
input  [0:0] choice_1_85_0_reload;
input  [0:0] choice_2_85_0_reload;
input  [0:0] choice_0_86_0_reload;
input  [0:0] choice_1_86_0_reload;
input  [0:0] choice_2_86_0_reload;
input  [0:0] choice_0_87_0_reload;
input  [0:0] choice_1_87_0_reload;
input  [0:0] choice_2_87_0_reload;
input  [0:0] choice_0_88_0_reload;
input  [0:0] choice_1_88_0_reload;
input  [0:0] choice_2_88_0_reload;
input  [0:0] choice_0_89_0_reload;
input  [0:0] choice_1_89_0_reload;
input  [0:0] choice_2_89_0_reload;
input  [0:0] choice_0_90_0_reload;
input  [0:0] choice_1_90_0_reload;
input  [0:0] choice_2_90_0_reload;
input  [0:0] choice_0_91_0_reload;
input  [0:0] choice_1_91_0_reload;
input  [0:0] choice_2_91_0_reload;
input  [0:0] choice_0_92_0_reload;
input  [0:0] choice_1_92_0_reload;
input  [0:0] choice_2_92_0_reload;
input  [0:0] choice_0_93_0_reload;
input  [0:0] choice_1_93_0_reload;
input  [0:0] choice_2_93_0_reload;
input  [0:0] choice_0_94_0_reload;
input  [0:0] choice_1_94_0_reload;
input  [0:0] choice_2_94_0_reload;
input  [0:0] choice_0_95_0_reload;
input  [0:0] choice_1_95_0_reload;
input  [0:0] choice_2_95_0_reload;
input  [0:0] choice_0_96_0_reload;
input  [0:0] choice_1_96_0_reload;
input  [0:0] choice_2_96_0_reload;
input  [0:0] choice_0_97_0_reload;
input  [0:0] choice_1_97_0_reload;
input  [0:0] choice_2_97_0_reload;
input  [0:0] choice_0_98_0_reload;
input  [0:0] choice_1_98_0_reload;
input  [0:0] choice_2_98_0_reload;
input  [0:0] choice_0_99_0_reload;
input  [0:0] choice_1_99_0_reload;
input  [0:0] choice_2_99_0_reload;
input  [0:0] choice_0_100_0_reload;
input  [0:0] choice_1_100_0_reload;
input  [0:0] choice_2_100_0_reload;
input  [0:0] choice_0_101_0_reload;
input  [0:0] choice_1_101_0_reload;
input  [0:0] choice_2_101_0_reload;
input  [0:0] choice_0_102_0_reload;
input  [0:0] choice_1_102_0_reload;
input  [0:0] choice_2_102_0_reload;
input  [0:0] choice_0_103_0_reload;
input  [0:0] choice_1_103_0_reload;
input  [0:0] choice_2_103_0_reload;
input  [0:0] choice_0_104_0_reload;
input  [0:0] choice_1_104_0_reload;
input  [0:0] choice_2_104_0_reload;
input  [0:0] choice_0_105_0_reload;
input  [0:0] choice_1_105_0_reload;
input  [0:0] choice_2_105_0_reload;
input  [0:0] choice_0_106_0_reload;
input  [0:0] choice_1_106_0_reload;
input  [0:0] choice_2_106_0_reload;
input  [0:0] choice_0_107_0_reload;
input  [0:0] choice_1_107_0_reload;
input  [0:0] choice_2_107_0_reload;
input  [0:0] choice_0_108_0_reload;
input  [0:0] choice_1_108_0_reload;
input  [0:0] choice_2_108_0_reload;
input  [0:0] choice_0_109_0_reload;
input  [0:0] choice_1_109_0_reload;
input  [0:0] choice_2_109_0_reload;
input  [0:0] choice_0_110_0_reload;
input  [0:0] choice_1_110_0_reload;
input  [0:0] choice_2_110_0_reload;
input  [0:0] choice_0_111_0_reload;
input  [0:0] choice_1_111_0_reload;
input  [0:0] choice_2_111_0_reload;
input  [0:0] choice_0_112_0_reload;
input  [0:0] choice_1_112_0_reload;
input  [0:0] choice_2_112_0_reload;
input  [0:0] choice_0_113_0_reload;
input  [0:0] choice_1_113_0_reload;
input  [0:0] choice_2_113_0_reload;
input  [0:0] choice_0_114_0_reload;
input  [0:0] choice_1_114_0_reload;
input  [0:0] choice_2_114_0_reload;
input  [0:0] choice_0_115_0_reload;
input  [0:0] choice_1_115_0_reload;
input  [0:0] choice_2_115_0_reload;
input  [0:0] choice_0_116_0_reload;
input  [0:0] choice_1_116_0_reload;
input  [0:0] choice_2_116_0_reload;
input  [0:0] choice_0_117_0_reload;
input  [0:0] choice_1_117_0_reload;
input  [0:0] choice_2_117_0_reload;
input  [0:0] choice_0_118_0_reload;
input  [0:0] choice_1_118_0_reload;
input  [0:0] choice_2_118_0_reload;
input  [0:0] choice_0_119_0_reload;
input  [0:0] choice_1_119_0_reload;
input  [0:0] choice_2_119_0_reload;
output  [3:0] prevState_V_address0;
output   prevState_V_ce0;
input  [5:0] prevState_V_q0;
output  [3:0] prevState_V_1_address0;
output   prevState_V_1_ce0;
input  [5:0] prevState_V_1_q0;
output  [3:0] prevState_V_2_address0;
output   prevState_V_2_ce0;
input  [5:0] prevState_V_2_q0;
output  [3:0] prevState_V_3_address0;
output   prevState_V_3_ce0;
input  [5:0] prevState_V_3_q0;
output  [3:0] prevState_V_4_address0;
output   prevState_V_4_ce0;
input  [5:0] prevState_V_4_q0;
output  [3:0] prevState_V_5_address0;
output   prevState_V_5_ce0;
input  [5:0] prevState_V_5_q0;
output  [3:0] prevState_V_6_address0;
output   prevState_V_6_ce0;
input  [5:0] prevState_V_6_q0;
output  [3:0] prevState_V_7_address0;
output   prevState_V_7_ce0;
input  [5:0] prevState_V_7_q0;
output  [3:0] prevState_V_8_address0;
output   prevState_V_8_ce0;
input  [5:0] prevState_V_8_q0;
output  [3:0] prevState_V_9_address0;
output   prevState_V_9_ce0;
input  [5:0] prevState_V_9_q0;
output  [3:0] prevState_V_10_address0;
output   prevState_V_10_ce0;
input  [5:0] prevState_V_10_q0;
output  [3:0] prevState_V_11_address0;
output   prevState_V_11_ce0;
input  [5:0] prevState_V_11_q0;
output  [3:0] prevState_V_12_address0;
output   prevState_V_12_ce0;
input  [5:0] prevState_V_12_q0;
output  [3:0] prevState_V_13_address0;
output   prevState_V_13_ce0;
input  [5:0] prevState_V_13_q0;
output  [3:0] prevState_V_14_address0;
output   prevState_V_14_ce0;
input  [5:0] prevState_V_14_q0;
output  [3:0] prevState_V_15_address0;
output   prevState_V_15_ce0;
input  [5:0] prevState_V_15_q0;
output  [3:0] prevState_V_16_address0;
output   prevState_V_16_ce0;
input  [5:0] prevState_V_16_q0;
output  [3:0] prevState_V_17_address0;
output   prevState_V_17_ce0;
input  [5:0] prevState_V_17_q0;
output  [3:0] prevState_V_18_address0;
output   prevState_V_18_ce0;
input  [5:0] prevState_V_18_q0;
output  [3:0] prevState_V_19_address0;
output   prevState_V_19_ce0;
input  [5:0] prevState_V_19_q0;
output  [3:0] prevState_V_20_address0;
output   prevState_V_20_ce0;
input  [5:0] prevState_V_20_q0;
output  [3:0] prevState_V_21_address0;
output   prevState_V_21_ce0;
input  [5:0] prevState_V_21_q0;
output  [3:0] prevState_V_22_address0;
output   prevState_V_22_ce0;
input  [5:0] prevState_V_22_q0;
output  [3:0] prevState_V_23_address0;
output   prevState_V_23_ce0;
input  [5:0] prevState_V_23_q0;
output  [3:0] prevState_V_24_address0;
output   prevState_V_24_ce0;
input  [5:0] prevState_V_24_q0;
output  [3:0] prevState_V_25_address0;
output   prevState_V_25_ce0;
input  [5:0] prevState_V_25_q0;
output  [3:0] prevState_V_26_address0;
output   prevState_V_26_ce0;
input  [5:0] prevState_V_26_q0;
output  [3:0] prevState_V_27_address0;
output   prevState_V_27_ce0;
input  [5:0] prevState_V_27_q0;
output  [3:0] prevState_V_28_address0;
output   prevState_V_28_ce0;
input  [5:0] prevState_V_28_q0;
output  [3:0] prevState_V_29_address0;
output   prevState_V_29_ce0;
input  [5:0] prevState_V_29_q0;
output  [47:0] p_Val2_1_out;
output   p_Val2_1_out_ap_vld;

reg ap_idle;
reg prevState_V_ce0;
reg prevState_V_1_ce0;
reg prevState_V_2_ce0;
reg prevState_V_3_ce0;
reg prevState_V_4_ce0;
reg prevState_V_5_ce0;
reg prevState_V_6_ce0;
reg prevState_V_7_ce0;
reg prevState_V_8_ce0;
reg prevState_V_9_ce0;
reg prevState_V_10_ce0;
reg prevState_V_11_ce0;
reg prevState_V_12_ce0;
reg prevState_V_13_ce0;
reg prevState_V_14_ce0;
reg prevState_V_15_ce0;
reg prevState_V_16_ce0;
reg prevState_V_17_ce0;
reg prevState_V_18_ce0;
reg prevState_V_19_ce0;
reg prevState_V_20_ce0;
reg prevState_V_21_ce0;
reg prevState_V_22_ce0;
reg prevState_V_23_ce0;
reg prevState_V_24_ce0;
reg prevState_V_25_ce0;
reg prevState_V_26_ce0;
reg prevState_V_27_ce0;
reg prevState_V_28_ce0;
reg prevState_V_29_ce0;
reg p_Val2_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state6_pp0_stage2_iter1;
wire    ap_block_state9_pp0_stage2_iter2;
wire    ap_block_state12_pp0_stage2_iter3;
wire    ap_block_state15_pp0_stage2_iter4;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln1453_reg_7865;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state13_pp0_stage0_iter4;
wire    ap_block_state16_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1453_fu_3620_p2;
reg   [0:0] icmp_ln1453_reg_7865_pp0_iter1_reg;
reg   [0:0] icmp_ln1453_reg_7865_pp0_iter2_reg;
reg   [0:0] icmp_ln1453_reg_7865_pp0_iter3_reg;
reg   [0:0] icmp_ln1453_reg_7865_pp0_iter4_reg;
wire   [5:0] add_ln1492_fu_3626_p2;
reg   [5:0] add_ln1492_reg_7869;
wire   [5:0] sub_ln1456_fu_3632_p2;
reg   [5:0] sub_ln1456_reg_7874;
reg   [4:0] tmp_23_reg_7880;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state11_pp0_stage1_iter3;
wire    ap_block_state14_pp0_stage1_iter4;
wire    ap_block_state17_pp0_stage1_iter5;
wire    ap_block_pp0_stage1_11001;
reg   [4:0] tmp_23_reg_7880_pp0_iter1_reg;
reg   [4:0] tmp_23_reg_7880_pp0_iter2_reg;
reg   [4:0] tmp_23_reg_7880_pp0_iter3_reg;
wire   [1:0] grp_fu_3657_p2;
reg   [1:0] urem_ln1065_reg_7893;
reg   [0:0] tmp_144_reg_7898;
wire    ap_block_pp0_stage2_11001;
wire   [0:0] tmp_15_fu_3861_p18;
reg   [0:0] tmp_15_reg_8067;
reg   [0:0] tmp_15_reg_8067_pp0_iter4_reg;
wire   [0:0] tmp_16_fu_4033_p18;
reg   [0:0] tmp_16_reg_8072;
reg   [0:0] tmp_16_reg_8072_pp0_iter4_reg;
wire   [0:0] tmp_17_fu_4205_p18;
reg   [0:0] tmp_17_reg_8077;
reg   [0:0] tmp_17_reg_8077_pp0_iter4_reg;
wire   [0:0] tmp_18_fu_4377_p18;
reg   [0:0] tmp_18_reg_8082;
reg   [0:0] tmp_18_reg_8082_pp0_iter4_reg;
wire   [0:0] tmp_19_fu_4549_p18;
reg   [0:0] tmp_19_reg_8087;
reg   [0:0] tmp_19_reg_8087_pp0_iter4_reg;
wire   [0:0] tmp_20_fu_4721_p18;
reg   [0:0] tmp_20_reg_8092;
reg   [0:0] tmp_20_reg_8092_pp0_iter4_reg;
wire   [0:0] tmp_21_fu_4893_p18;
reg   [0:0] tmp_21_reg_8097;
reg   [0:0] tmp_21_reg_8097_pp0_iter4_reg;
wire   [0:0] tmp_22_fu_5065_p18;
reg   [0:0] tmp_22_reg_8102;
reg   [0:0] tmp_22_reg_8102_pp0_iter4_reg;
wire   [5:0] tmp_fu_5102_p4;
reg   [5:0] tmp_reg_8107;
wire   [5:0] tmp_1_fu_5111_p4;
reg   [5:0] tmp_1_reg_8112;
wire   [5:0] tmp_2_fu_5120_p4;
reg   [5:0] tmp_2_reg_8117;
wire   [5:0] tmp_3_fu_5129_p4;
reg   [5:0] tmp_3_reg_8122;
wire   [5:0] tmp_4_fu_5138_p4;
reg   [5:0] tmp_4_reg_8127;
wire   [5:0] tmp_5_fu_5147_p4;
reg   [5:0] tmp_5_reg_8132;
wire   [5:0] tmp_6_fu_5156_p4;
reg   [5:0] tmp_6_reg_8137;
wire   [5:0] tmp_7_fu_5165_p4;
reg   [5:0] tmp_7_reg_8142;
wire   [5:0] tmp_8_fu_5174_p4;
reg   [5:0] tmp_8_reg_8147;
wire   [5:0] tmp_9_fu_5183_p4;
reg   [5:0] tmp_9_reg_8152;
wire   [5:0] tmp_s_fu_5192_p4;
reg   [5:0] tmp_s_reg_8157;
wire   [5:0] tmp_10_fu_5201_p4;
reg   [5:0] tmp_10_reg_8162;
wire   [5:0] tmp_11_fu_5210_p4;
reg   [5:0] tmp_11_reg_8167;
wire   [5:0] tmp_12_fu_5219_p4;
reg   [5:0] tmp_12_reg_8172;
wire   [5:0] tmp_13_fu_5228_p4;
reg   [5:0] tmp_13_reg_8177;
wire   [5:0] tmp_14_fu_5237_p18;
reg   [5:0] tmp_14_reg_8182;
wire   [0:0] empty_49_fu_5344_p2;
reg   [0:0] empty_49_reg_8250;
wire   [0:0] empty_64_fu_5426_p2;
reg   [0:0] empty_64_reg_8254;
wire   [0:0] empty_79_fu_5508_p2;
reg   [0:0] empty_79_reg_8258;
wire   [0:0] empty_94_fu_5590_p2;
reg   [0:0] empty_94_reg_8262;
wire   [0:0] empty_109_fu_5672_p2;
reg   [0:0] empty_109_reg_8266;
wire   [0:0] empty_124_fu_5754_p2;
reg   [0:0] empty_124_reg_8270;
wire   [0:0] empty_139_fu_5836_p2;
reg   [0:0] empty_139_reg_8274;
wire   [0:0] icmp_ln1065_fu_5842_p2;
reg   [0:0] icmp_ln1065_reg_8278;
wire   [0:0] icmp_ln1065_1_fu_5847_p2;
reg   [0:0] icmp_ln1065_1_reg_8283;
wire   [0:0] icmp_ln1065_2_fu_5852_p2;
reg   [0:0] icmp_ln1065_2_reg_8288;
wire   [0:0] icmp_ln1065_3_fu_5857_p2;
reg   [0:0] icmp_ln1065_3_reg_8293;
wire   [0:0] icmp_ln1065_4_fu_5862_p2;
reg   [0:0] icmp_ln1065_4_reg_8298;
wire   [0:0] icmp_ln1065_5_fu_5867_p2;
reg   [0:0] icmp_ln1065_5_reg_8303;
wire   [0:0] icmp_ln1065_6_fu_5872_p2;
reg   [0:0] icmp_ln1065_6_reg_8308;
wire   [0:0] icmp_ln1065_7_fu_5877_p2;
reg   [0:0] icmp_ln1065_7_reg_8313;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
wire   [63:0] zext_ln1065_1_fu_3692_p1;
wire    ap_block_pp0_stage2;
reg   [2:0] Bucket_V_1_fu_994;
wire   [2:0] select_ln1484_fu_5916_p3;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
reg   [2:0] phi_ln1369_fu_998;
wire   [2:0] empty_34_fu_5259_p1;
reg   [6:0] k_fu_1002;
wire   [6:0] k_1_fu_6001_p2;
reg   [47:0] p_Val2_s_fu_1006;
reg   [47:0] p_Result_1_fu_5991_p4;
reg   [5:0] count_fu_1010;
reg   [5:0] ap_sig_allocacmp_count_1;
wire    ap_block_pp0_stage1_01001;
wire   [5:0] mul_ln1065_fu_3641_p0;
wire   [7:0] mul_ln1065_fu_3641_p1;
wire   [12:0] mul_ln1065_fu_3641_p2;
wire   [2:0] grp_fu_3657_p1;
wire   [1:0] trunc_ln1065_fu_3669_p1;
wire   [1:0] trunc_ln1065_1_fu_3672_p1;
wire   [3:0] tmp_145_fu_3684_p3;
wire   [0:0] tmp_24_fu_3726_p5;
wire   [0:0] tmp_25_fu_3735_p5;
wire   [0:0] tmp_26_fu_3744_p5;
wire   [0:0] tmp_27_fu_3753_p5;
wire   [0:0] tmp_28_fu_3762_p5;
wire   [0:0] tmp_29_fu_3771_p5;
wire   [0:0] tmp_30_fu_3780_p5;
wire   [0:0] tmp_31_fu_3789_p5;
wire   [0:0] tmp_32_fu_3798_p5;
wire   [0:0] tmp_33_fu_3807_p5;
wire   [0:0] tmp_34_fu_3816_p5;
wire   [0:0] tmp_35_fu_3825_p5;
wire   [0:0] tmp_36_fu_3834_p5;
wire   [0:0] tmp_37_fu_3843_p5;
wire   [0:0] tmp_38_fu_3852_p5;
wire   [0:0] tmp_39_fu_3898_p5;
wire   [0:0] tmp_40_fu_3907_p5;
wire   [0:0] tmp_41_fu_3916_p5;
wire   [0:0] tmp_42_fu_3925_p5;
wire   [0:0] tmp_43_fu_3934_p5;
wire   [0:0] tmp_44_fu_3943_p5;
wire   [0:0] tmp_45_fu_3952_p5;
wire   [0:0] tmp_46_fu_3961_p5;
wire   [0:0] tmp_47_fu_3970_p5;
wire   [0:0] tmp_48_fu_3979_p5;
wire   [0:0] tmp_49_fu_3988_p5;
wire   [0:0] tmp_50_fu_3997_p5;
wire   [0:0] tmp_51_fu_4006_p5;
wire   [0:0] tmp_52_fu_4015_p5;
wire   [0:0] tmp_53_fu_4024_p5;
wire   [0:0] tmp_54_fu_4070_p5;
wire   [0:0] tmp_55_fu_4079_p5;
wire   [0:0] tmp_56_fu_4088_p5;
wire   [0:0] tmp_57_fu_4097_p5;
wire   [0:0] tmp_58_fu_4106_p5;
wire   [0:0] tmp_59_fu_4115_p5;
wire   [0:0] tmp_60_fu_4124_p5;
wire   [0:0] tmp_61_fu_4133_p5;
wire   [0:0] tmp_62_fu_4142_p5;
wire   [0:0] tmp_63_fu_4151_p5;
wire   [0:0] tmp_64_fu_4160_p5;
wire   [0:0] tmp_65_fu_4169_p5;
wire   [0:0] tmp_66_fu_4178_p5;
wire   [0:0] tmp_67_fu_4187_p5;
wire   [0:0] tmp_68_fu_4196_p5;
wire   [0:0] tmp_69_fu_4242_p5;
wire   [0:0] tmp_70_fu_4251_p5;
wire   [0:0] tmp_71_fu_4260_p5;
wire   [0:0] tmp_72_fu_4269_p5;
wire   [0:0] tmp_73_fu_4278_p5;
wire   [0:0] tmp_74_fu_4287_p5;
wire   [0:0] tmp_75_fu_4296_p5;
wire   [0:0] tmp_76_fu_4305_p5;
wire   [0:0] tmp_77_fu_4314_p5;
wire   [0:0] tmp_78_fu_4323_p5;
wire   [0:0] tmp_79_fu_4332_p5;
wire   [0:0] tmp_80_fu_4341_p5;
wire   [0:0] tmp_81_fu_4350_p5;
wire   [0:0] tmp_82_fu_4359_p5;
wire   [0:0] tmp_83_fu_4368_p5;
wire   [0:0] tmp_84_fu_4414_p5;
wire   [0:0] tmp_85_fu_4423_p5;
wire   [0:0] tmp_86_fu_4432_p5;
wire   [0:0] tmp_87_fu_4441_p5;
wire   [0:0] tmp_88_fu_4450_p5;
wire   [0:0] tmp_89_fu_4459_p5;
wire   [0:0] tmp_90_fu_4468_p5;
wire   [0:0] tmp_91_fu_4477_p5;
wire   [0:0] tmp_92_fu_4486_p5;
wire   [0:0] tmp_93_fu_4495_p5;
wire   [0:0] tmp_94_fu_4504_p5;
wire   [0:0] tmp_95_fu_4513_p5;
wire   [0:0] tmp_96_fu_4522_p5;
wire   [0:0] tmp_97_fu_4531_p5;
wire   [0:0] tmp_98_fu_4540_p5;
wire   [0:0] tmp_99_fu_4586_p5;
wire   [0:0] tmp_100_fu_4595_p5;
wire   [0:0] tmp_101_fu_4604_p5;
wire   [0:0] tmp_102_fu_4613_p5;
wire   [0:0] tmp_103_fu_4622_p5;
wire   [0:0] tmp_104_fu_4631_p5;
wire   [0:0] tmp_105_fu_4640_p5;
wire   [0:0] tmp_106_fu_4649_p5;
wire   [0:0] tmp_107_fu_4658_p5;
wire   [0:0] tmp_108_fu_4667_p5;
wire   [0:0] tmp_109_fu_4676_p5;
wire   [0:0] tmp_110_fu_4685_p5;
wire   [0:0] tmp_111_fu_4694_p5;
wire   [0:0] tmp_112_fu_4703_p5;
wire   [0:0] tmp_113_fu_4712_p5;
wire   [0:0] tmp_114_fu_4758_p5;
wire   [0:0] tmp_115_fu_4767_p5;
wire   [0:0] tmp_116_fu_4776_p5;
wire   [0:0] tmp_117_fu_4785_p5;
wire   [0:0] tmp_118_fu_4794_p5;
wire   [0:0] tmp_119_fu_4803_p5;
wire   [0:0] tmp_120_fu_4812_p5;
wire   [0:0] tmp_121_fu_4821_p5;
wire   [0:0] tmp_122_fu_4830_p5;
wire   [0:0] tmp_123_fu_4839_p5;
wire   [0:0] tmp_124_fu_4848_p5;
wire   [0:0] tmp_125_fu_4857_p5;
wire   [0:0] tmp_126_fu_4866_p5;
wire   [0:0] tmp_127_fu_4875_p5;
wire   [0:0] tmp_128_fu_4884_p5;
wire   [0:0] tmp_129_fu_4930_p5;
wire   [0:0] tmp_130_fu_4939_p5;
wire   [0:0] tmp_131_fu_4948_p5;
wire   [0:0] tmp_132_fu_4957_p5;
wire   [0:0] tmp_133_fu_4966_p5;
wire   [0:0] tmp_134_fu_4975_p5;
wire   [0:0] tmp_135_fu_4984_p5;
wire   [0:0] tmp_136_fu_4993_p5;
wire   [0:0] tmp_137_fu_5002_p5;
wire   [0:0] tmp_138_fu_5011_p5;
wire   [0:0] tmp_139_fu_5020_p5;
wire   [0:0] tmp_140_fu_5029_p5;
wire   [0:0] tmp_141_fu_5038_p5;
wire   [0:0] tmp_142_fu_5047_p5;
wire   [0:0] tmp_143_fu_5056_p5;
wire   [0:0] empty_36_fu_5273_p2;
wire   [0:0] empty_35_fu_5268_p2;
wire   [0:0] empty_42_fu_5303_p2;
wire   [0:0] empty_37_fu_5278_p2;
wire   [0:0] empty_44_fu_5314_p2;
wire   [0:0] empty_38_fu_5283_p2;
wire   [0:0] empty_45_fu_5320_p2;
wire   [0:0] empty_39_fu_5288_p2;
wire   [0:0] empty_46_fu_5326_p2;
wire   [0:0] empty_40_fu_5293_p2;
wire   [0:0] empty_47_fu_5332_p2;
wire   [0:0] empty_41_fu_5298_p2;
wire   [0:0] empty_48_fu_5338_p2;
wire   [0:0] empty_43_fu_5309_p2;
wire   [0:0] empty_50_fu_5350_p2;
wire   [0:0] empty_51_fu_5355_p2;
wire   [0:0] empty_57_fu_5385_p2;
wire   [0:0] empty_52_fu_5360_p2;
wire   [0:0] empty_59_fu_5396_p2;
wire   [0:0] empty_53_fu_5365_p2;
wire   [0:0] empty_60_fu_5402_p2;
wire   [0:0] empty_54_fu_5370_p2;
wire   [0:0] empty_61_fu_5408_p2;
wire   [0:0] empty_55_fu_5375_p2;
wire   [0:0] empty_62_fu_5414_p2;
wire   [0:0] empty_56_fu_5380_p2;
wire   [0:0] empty_63_fu_5420_p2;
wire   [0:0] empty_58_fu_5391_p2;
wire   [0:0] empty_65_fu_5432_p2;
wire   [0:0] empty_66_fu_5437_p2;
wire   [0:0] empty_72_fu_5467_p2;
wire   [0:0] empty_67_fu_5442_p2;
wire   [0:0] empty_74_fu_5478_p2;
wire   [0:0] empty_68_fu_5447_p2;
wire   [0:0] empty_75_fu_5484_p2;
wire   [0:0] empty_69_fu_5452_p2;
wire   [0:0] empty_76_fu_5490_p2;
wire   [0:0] empty_70_fu_5457_p2;
wire   [0:0] empty_77_fu_5496_p2;
wire   [0:0] empty_71_fu_5462_p2;
wire   [0:0] empty_78_fu_5502_p2;
wire   [0:0] empty_73_fu_5473_p2;
wire   [0:0] empty_80_fu_5514_p2;
wire   [0:0] empty_81_fu_5519_p2;
wire   [0:0] empty_87_fu_5549_p2;
wire   [0:0] empty_82_fu_5524_p2;
wire   [0:0] empty_89_fu_5560_p2;
wire   [0:0] empty_83_fu_5529_p2;
wire   [0:0] empty_90_fu_5566_p2;
wire   [0:0] empty_84_fu_5534_p2;
wire   [0:0] empty_91_fu_5572_p2;
wire   [0:0] empty_85_fu_5539_p2;
wire   [0:0] empty_92_fu_5578_p2;
wire   [0:0] empty_86_fu_5544_p2;
wire   [0:0] empty_93_fu_5584_p2;
wire   [0:0] empty_88_fu_5555_p2;
wire   [0:0] empty_95_fu_5596_p2;
wire   [0:0] empty_96_fu_5601_p2;
wire   [0:0] empty_102_fu_5631_p2;
wire   [0:0] empty_97_fu_5606_p2;
wire   [0:0] empty_104_fu_5642_p2;
wire   [0:0] empty_98_fu_5611_p2;
wire   [0:0] empty_105_fu_5648_p2;
wire   [0:0] empty_99_fu_5616_p2;
wire   [0:0] empty_106_fu_5654_p2;
wire   [0:0] empty_100_fu_5621_p2;
wire   [0:0] empty_107_fu_5660_p2;
wire   [0:0] empty_101_fu_5626_p2;
wire   [0:0] empty_108_fu_5666_p2;
wire   [0:0] empty_103_fu_5637_p2;
wire   [0:0] empty_110_fu_5678_p2;
wire   [0:0] empty_111_fu_5683_p2;
wire   [0:0] empty_117_fu_5713_p2;
wire   [0:0] empty_112_fu_5688_p2;
wire   [0:0] empty_119_fu_5724_p2;
wire   [0:0] empty_113_fu_5693_p2;
wire   [0:0] empty_120_fu_5730_p2;
wire   [0:0] empty_114_fu_5698_p2;
wire   [0:0] empty_121_fu_5736_p2;
wire   [0:0] empty_115_fu_5703_p2;
wire   [0:0] empty_122_fu_5742_p2;
wire   [0:0] empty_116_fu_5708_p2;
wire   [0:0] empty_123_fu_5748_p2;
wire   [0:0] empty_118_fu_5719_p2;
wire   [0:0] empty_125_fu_5760_p2;
wire   [0:0] empty_126_fu_5765_p2;
wire   [0:0] empty_132_fu_5795_p2;
wire   [0:0] empty_127_fu_5770_p2;
wire   [0:0] empty_134_fu_5806_p2;
wire   [0:0] empty_128_fu_5775_p2;
wire   [0:0] empty_135_fu_5812_p2;
wire   [0:0] empty_129_fu_5780_p2;
wire   [0:0] empty_136_fu_5818_p2;
wire   [0:0] empty_130_fu_5785_p2;
wire   [0:0] empty_137_fu_5824_p2;
wire   [0:0] empty_131_fu_5790_p2;
wire   [0:0] empty_138_fu_5830_p2;
wire   [0:0] empty_133_fu_5801_p2;
wire   [0:0] or_ln1484_1_fu_5882_p2;
wire   [0:0] or_ln1484_3_fu_5895_p2;
wire   [0:0] or_ln1484_4_fu_5891_p2;
wire   [0:0] or_ln1484_5_fu_5899_p2;
wire   [0:0] or_ln1484_2_fu_5905_p2;
wire   [0:0] or_ln1484_fu_5886_p2;
wire   [0:0] or_ln1484_6_fu_5910_p2;
wire   [31:0] k_cast_fu_5967_p1;
wire   [0:0] p_Repl2_s_fu_5977_p10;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter4_stage1;
reg    ap_idle_pp0_0to3;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [2:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to5;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [12:0] mul_ln1065_fu_3641_p00;
reg    ap_condition_4787;
reg    ap_condition_4796;
reg    ap_condition_4804;
reg    ap_condition_4811;
reg    ap_condition_4817;
reg    ap_condition_4822;
reg    ap_condition_4826;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

TrellisBuilder_mul_6ns_8ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 13 ))
mul_6ns_8ns_13_1_1_U396(
    .din0(mul_ln1065_fu_3641_p0),
    .din1(mul_ln1065_fu_3641_p1),
    .dout(mul_ln1065_fu_3641_p2)
);

TrellisBuilder_urem_6ns_3ns_2_10_1 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_6ns_3ns_2_10_1_U397(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln1456_reg_7874),
    .din1(grp_fu_3657_p1),
    .ce(1'b1),
    .dout(grp_fu_3657_p2)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U398(
    .din0(choice_0_0_reload),
    .din1(choice_1_0_reload),
    .din2(choice_2_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_24_fu_3726_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U399(
    .din0(choice_0_1_0_reload),
    .din1(choice_1_1_0_reload),
    .din2(choice_2_1_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_25_fu_3735_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U400(
    .din0(choice_0_2_0_reload),
    .din1(choice_1_2_0_reload),
    .din2(choice_2_2_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_26_fu_3744_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U401(
    .din0(choice_0_3_0_reload),
    .din1(choice_1_3_0_reload),
    .din2(choice_2_3_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_27_fu_3753_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U402(
    .din0(choice_0_4_0_reload),
    .din1(choice_1_4_0_reload),
    .din2(choice_2_4_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_28_fu_3762_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U403(
    .din0(choice_0_5_0_reload),
    .din1(choice_1_5_0_reload),
    .din2(choice_2_5_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_29_fu_3771_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U404(
    .din0(choice_0_6_0_reload),
    .din1(choice_1_6_0_reload),
    .din2(choice_2_6_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_30_fu_3780_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U405(
    .din0(choice_0_7_0_reload),
    .din1(choice_1_7_0_reload),
    .din2(choice_2_7_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_31_fu_3789_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U406(
    .din0(choice_0_8_0_reload),
    .din1(choice_1_8_0_reload),
    .din2(choice_2_8_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_32_fu_3798_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U407(
    .din0(choice_0_9_0_reload),
    .din1(choice_1_9_0_reload),
    .din2(choice_2_9_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_33_fu_3807_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U408(
    .din0(choice_0_10_0_reload),
    .din1(choice_1_10_0_reload),
    .din2(choice_2_10_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_34_fu_3816_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U409(
    .din0(choice_0_11_0_reload),
    .din1(choice_1_11_0_reload),
    .din2(choice_2_11_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_35_fu_3825_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U410(
    .din0(choice_0_12_0_reload),
    .din1(choice_1_12_0_reload),
    .din2(choice_2_12_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_36_fu_3834_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U411(
    .din0(choice_0_13_0_reload),
    .din1(choice_1_13_0_reload),
    .din2(choice_2_13_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_37_fu_3843_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U412(
    .din0(choice_0_14_0_reload),
    .din1(choice_1_14_0_reload),
    .din2(p_Repl2_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_38_fu_3852_p5)
);

TrellisBuilder_mux_165_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 5 ),
    .dout_WIDTH( 1 ))
mux_165_1_1_1_U413(
    .din0(1'd0),
    .din1(tmp_24_fu_3726_p5),
    .din2(tmp_25_fu_3735_p5),
    .din3(tmp_26_fu_3744_p5),
    .din4(tmp_27_fu_3753_p5),
    .din5(tmp_28_fu_3762_p5),
    .din6(tmp_29_fu_3771_p5),
    .din7(tmp_30_fu_3780_p5),
    .din8(tmp_31_fu_3789_p5),
    .din9(tmp_32_fu_3798_p5),
    .din10(tmp_33_fu_3807_p5),
    .din11(tmp_34_fu_3816_p5),
    .din12(tmp_35_fu_3825_p5),
    .din13(tmp_36_fu_3834_p5),
    .din14(tmp_37_fu_3843_p5),
    .din15(tmp_38_fu_3852_p5),
    .din16(tmp_23_reg_7880_pp0_iter3_reg),
    .dout(tmp_15_fu_3861_p18)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U414(
    .din0(choice_0_15_0_reload),
    .din1(choice_1_15_0_reload),
    .din2(choice_2_15_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_39_fu_3898_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U415(
    .din0(choice_0_16_0_reload),
    .din1(choice_1_16_0_reload),
    .din2(choice_2_16_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_40_fu_3907_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U416(
    .din0(choice_0_17_0_reload),
    .din1(choice_1_17_0_reload),
    .din2(choice_2_17_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_41_fu_3916_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U417(
    .din0(choice_0_18_0_reload),
    .din1(choice_1_18_0_reload),
    .din2(choice_2_18_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_42_fu_3925_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U418(
    .din0(choice_0_19_0_reload),
    .din1(choice_1_19_0_reload),
    .din2(choice_2_19_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_43_fu_3934_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U419(
    .din0(choice_0_20_0_reload),
    .din1(choice_1_20_0_reload),
    .din2(choice_2_20_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_44_fu_3943_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U420(
    .din0(choice_0_21_0_reload),
    .din1(choice_1_21_0_reload),
    .din2(choice_2_21_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_45_fu_3952_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U421(
    .din0(choice_0_22_0_reload),
    .din1(choice_1_22_0_reload),
    .din2(choice_2_22_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_46_fu_3961_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U422(
    .din0(choice_0_23_0_reload),
    .din1(choice_1_23_0_reload),
    .din2(choice_2_23_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_47_fu_3970_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U423(
    .din0(choice_0_24_0_reload),
    .din1(choice_1_24_0_reload),
    .din2(choice_2_24_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_48_fu_3979_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U424(
    .din0(choice_0_25_0_reload),
    .din1(choice_1_25_0_reload),
    .din2(choice_2_25_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_49_fu_3988_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U425(
    .din0(choice_0_26_0_reload),
    .din1(choice_1_26_0_reload),
    .din2(choice_2_26_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_50_fu_3997_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U426(
    .din0(choice_0_27_0_reload),
    .din1(choice_1_27_0_reload),
    .din2(choice_2_27_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_51_fu_4006_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U427(
    .din0(choice_0_28_0_reload),
    .din1(choice_1_28_0_reload),
    .din2(choice_2_28_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_52_fu_4015_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U428(
    .din0(choice_0_29_0_reload),
    .din1(choice_1_29_0_reload),
    .din2(choice_2_29_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_53_fu_4024_p5)
);

TrellisBuilder_mux_165_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 5 ),
    .dout_WIDTH( 1 ))
mux_165_1_1_1_U429(
    .din0(1'd0),
    .din1(tmp_39_fu_3898_p5),
    .din2(tmp_40_fu_3907_p5),
    .din3(tmp_41_fu_3916_p5),
    .din4(tmp_42_fu_3925_p5),
    .din5(tmp_43_fu_3934_p5),
    .din6(tmp_44_fu_3943_p5),
    .din7(tmp_45_fu_3952_p5),
    .din8(tmp_46_fu_3961_p5),
    .din9(tmp_47_fu_3970_p5),
    .din10(tmp_48_fu_3979_p5),
    .din11(tmp_49_fu_3988_p5),
    .din12(tmp_50_fu_3997_p5),
    .din13(tmp_51_fu_4006_p5),
    .din14(tmp_52_fu_4015_p5),
    .din15(tmp_53_fu_4024_p5),
    .din16(tmp_23_reg_7880_pp0_iter3_reg),
    .dout(tmp_16_fu_4033_p18)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U430(
    .din0(choice_0_30_0_reload),
    .din1(choice_1_30_0_reload),
    .din2(choice_2_30_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_54_fu_4070_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U431(
    .din0(choice_0_31_0_reload),
    .din1(choice_1_31_0_reload),
    .din2(choice_2_31_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_55_fu_4079_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U432(
    .din0(choice_0_32_0_reload),
    .din1(choice_1_32_0_reload),
    .din2(choice_2_32_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_56_fu_4088_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U433(
    .din0(choice_0_33_0_reload),
    .din1(choice_1_33_0_reload),
    .din2(choice_2_33_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_57_fu_4097_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U434(
    .din0(choice_0_34_0_reload),
    .din1(choice_1_34_0_reload),
    .din2(choice_2_34_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_58_fu_4106_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U435(
    .din0(choice_0_35_0_reload),
    .din1(choice_1_35_0_reload),
    .din2(choice_2_35_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_59_fu_4115_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U436(
    .din0(choice_0_36_0_reload),
    .din1(choice_1_36_0_reload),
    .din2(choice_2_36_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_60_fu_4124_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U437(
    .din0(choice_0_37_0_reload),
    .din1(choice_1_37_0_reload),
    .din2(choice_2_37_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_61_fu_4133_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U438(
    .din0(choice_0_38_0_reload),
    .din1(choice_1_38_0_reload),
    .din2(choice_2_38_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_62_fu_4142_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U439(
    .din0(choice_0_39_0_reload),
    .din1(choice_1_39_0_reload),
    .din2(choice_2_39_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_63_fu_4151_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U440(
    .din0(choice_0_40_0_reload),
    .din1(choice_1_40_0_reload),
    .din2(choice_2_40_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_64_fu_4160_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U441(
    .din0(choice_0_41_0_reload),
    .din1(choice_1_41_0_reload),
    .din2(choice_2_41_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_65_fu_4169_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U442(
    .din0(choice_0_42_0_reload),
    .din1(choice_1_42_0_reload),
    .din2(choice_2_42_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_66_fu_4178_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U443(
    .din0(choice_0_43_0_reload),
    .din1(choice_1_43_0_reload),
    .din2(choice_2_43_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_67_fu_4187_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U444(
    .din0(choice_0_44_0_reload),
    .din1(choice_1_44_0_reload),
    .din2(choice_2_44_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_68_fu_4196_p5)
);

TrellisBuilder_mux_165_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 5 ),
    .dout_WIDTH( 1 ))
mux_165_1_1_1_U445(
    .din0(1'd0),
    .din1(tmp_54_fu_4070_p5),
    .din2(tmp_55_fu_4079_p5),
    .din3(tmp_56_fu_4088_p5),
    .din4(tmp_57_fu_4097_p5),
    .din5(tmp_58_fu_4106_p5),
    .din6(tmp_59_fu_4115_p5),
    .din7(tmp_60_fu_4124_p5),
    .din8(tmp_61_fu_4133_p5),
    .din9(tmp_62_fu_4142_p5),
    .din10(tmp_63_fu_4151_p5),
    .din11(tmp_64_fu_4160_p5),
    .din12(tmp_65_fu_4169_p5),
    .din13(tmp_66_fu_4178_p5),
    .din14(tmp_67_fu_4187_p5),
    .din15(tmp_68_fu_4196_p5),
    .din16(tmp_23_reg_7880_pp0_iter3_reg),
    .dout(tmp_17_fu_4205_p18)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U446(
    .din0(choice_0_45_0_reload),
    .din1(choice_1_45_0_reload),
    .din2(choice_2_45_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_69_fu_4242_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U447(
    .din0(choice_0_46_0_reload),
    .din1(choice_1_46_0_reload),
    .din2(choice_2_46_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_70_fu_4251_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U448(
    .din0(choice_0_47_0_reload),
    .din1(choice_1_47_0_reload),
    .din2(choice_2_47_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_71_fu_4260_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U449(
    .din0(choice_0_48_0_reload),
    .din1(choice_1_48_0_reload),
    .din2(choice_2_48_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_72_fu_4269_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U450(
    .din0(choice_0_49_0_reload),
    .din1(choice_1_49_0_reload),
    .din2(choice_2_49_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_73_fu_4278_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U451(
    .din0(choice_0_50_0_reload),
    .din1(choice_1_50_0_reload),
    .din2(choice_2_50_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_74_fu_4287_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U452(
    .din0(choice_0_51_0_reload),
    .din1(choice_1_51_0_reload),
    .din2(choice_2_51_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_75_fu_4296_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U453(
    .din0(choice_0_52_0_reload),
    .din1(choice_1_52_0_reload),
    .din2(choice_2_52_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_76_fu_4305_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U454(
    .din0(choice_0_53_0_reload),
    .din1(choice_1_53_0_reload),
    .din2(choice_2_53_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_77_fu_4314_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U455(
    .din0(choice_0_54_0_reload),
    .din1(choice_1_54_0_reload),
    .din2(choice_2_54_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_78_fu_4323_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U456(
    .din0(choice_0_55_0_reload),
    .din1(choice_1_55_0_reload),
    .din2(choice_2_55_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_79_fu_4332_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U457(
    .din0(choice_0_56_0_reload),
    .din1(choice_1_56_0_reload),
    .din2(choice_2_56_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_80_fu_4341_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U458(
    .din0(choice_0_57_0_reload),
    .din1(choice_1_57_0_reload),
    .din2(choice_2_57_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_81_fu_4350_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U459(
    .din0(choice_0_58_0_reload),
    .din1(choice_1_58_0_reload),
    .din2(choice_2_58_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_82_fu_4359_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U460(
    .din0(choice_0_59_0_reload),
    .din1(choice_1_59_0_reload),
    .din2(choice_2_59_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_83_fu_4368_p5)
);

TrellisBuilder_mux_165_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 5 ),
    .dout_WIDTH( 1 ))
mux_165_1_1_1_U461(
    .din0(1'd0),
    .din1(tmp_69_fu_4242_p5),
    .din2(tmp_70_fu_4251_p5),
    .din3(tmp_71_fu_4260_p5),
    .din4(tmp_72_fu_4269_p5),
    .din5(tmp_73_fu_4278_p5),
    .din6(tmp_74_fu_4287_p5),
    .din7(tmp_75_fu_4296_p5),
    .din8(tmp_76_fu_4305_p5),
    .din9(tmp_77_fu_4314_p5),
    .din10(tmp_78_fu_4323_p5),
    .din11(tmp_79_fu_4332_p5),
    .din12(tmp_80_fu_4341_p5),
    .din13(tmp_81_fu_4350_p5),
    .din14(tmp_82_fu_4359_p5),
    .din15(tmp_83_fu_4368_p5),
    .din16(tmp_23_reg_7880_pp0_iter3_reg),
    .dout(tmp_18_fu_4377_p18)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U462(
    .din0(choice_0_60_0_reload),
    .din1(choice_1_60_0_reload),
    .din2(choice_2_60_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_84_fu_4414_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U463(
    .din0(choice_0_61_0_reload),
    .din1(choice_1_61_0_reload),
    .din2(choice_2_61_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_85_fu_4423_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U464(
    .din0(choice_0_62_0_reload),
    .din1(choice_1_62_0_reload),
    .din2(choice_2_62_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_86_fu_4432_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U465(
    .din0(choice_0_63_0_reload),
    .din1(choice_1_63_0_reload),
    .din2(choice_2_63_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_87_fu_4441_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U466(
    .din0(choice_0_64_0_reload),
    .din1(choice_1_64_0_reload),
    .din2(choice_2_64_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_88_fu_4450_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U467(
    .din0(choice_0_65_0_reload),
    .din1(choice_1_65_0_reload),
    .din2(choice_2_65_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_89_fu_4459_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U468(
    .din0(choice_0_66_0_reload),
    .din1(choice_1_66_0_reload),
    .din2(choice_2_66_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_90_fu_4468_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U469(
    .din0(choice_0_67_0_reload),
    .din1(choice_1_67_0_reload),
    .din2(choice_2_67_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_91_fu_4477_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U470(
    .din0(choice_0_68_0_reload),
    .din1(choice_1_68_0_reload),
    .din2(choice_2_68_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_92_fu_4486_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U471(
    .din0(choice_0_69_0_reload),
    .din1(choice_1_69_0_reload),
    .din2(choice_2_69_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_93_fu_4495_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U472(
    .din0(choice_0_70_0_reload),
    .din1(choice_1_70_0_reload),
    .din2(choice_2_70_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_94_fu_4504_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U473(
    .din0(choice_0_71_0_reload),
    .din1(choice_1_71_0_reload),
    .din2(choice_2_71_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_95_fu_4513_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U474(
    .din0(choice_0_72_0_reload),
    .din1(choice_1_72_0_reload),
    .din2(choice_2_72_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_96_fu_4522_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U475(
    .din0(choice_0_73_0_reload),
    .din1(choice_1_73_0_reload),
    .din2(choice_2_73_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_97_fu_4531_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U476(
    .din0(choice_0_74_0_reload),
    .din1(choice_1_74_0_reload),
    .din2(choice_2_74_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_98_fu_4540_p5)
);

TrellisBuilder_mux_165_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 5 ),
    .dout_WIDTH( 1 ))
mux_165_1_1_1_U477(
    .din0(1'd0),
    .din1(tmp_84_fu_4414_p5),
    .din2(tmp_85_fu_4423_p5),
    .din3(tmp_86_fu_4432_p5),
    .din4(tmp_87_fu_4441_p5),
    .din5(tmp_88_fu_4450_p5),
    .din6(tmp_89_fu_4459_p5),
    .din7(tmp_90_fu_4468_p5),
    .din8(tmp_91_fu_4477_p5),
    .din9(tmp_92_fu_4486_p5),
    .din10(tmp_93_fu_4495_p5),
    .din11(tmp_94_fu_4504_p5),
    .din12(tmp_95_fu_4513_p5),
    .din13(tmp_96_fu_4522_p5),
    .din14(tmp_97_fu_4531_p5),
    .din15(tmp_98_fu_4540_p5),
    .din16(tmp_23_reg_7880_pp0_iter3_reg),
    .dout(tmp_19_fu_4549_p18)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U478(
    .din0(choice_0_75_0_reload),
    .din1(choice_1_75_0_reload),
    .din2(choice_2_75_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_99_fu_4586_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U479(
    .din0(choice_0_76_0_reload),
    .din1(choice_1_76_0_reload),
    .din2(choice_2_76_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_100_fu_4595_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U480(
    .din0(choice_0_77_0_reload),
    .din1(choice_1_77_0_reload),
    .din2(choice_2_77_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_101_fu_4604_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U481(
    .din0(choice_0_78_0_reload),
    .din1(choice_1_78_0_reload),
    .din2(choice_2_78_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_102_fu_4613_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U482(
    .din0(choice_0_79_0_reload),
    .din1(choice_1_79_0_reload),
    .din2(choice_2_79_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_103_fu_4622_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U483(
    .din0(choice_0_80_0_reload),
    .din1(choice_1_80_0_reload),
    .din2(choice_2_80_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_104_fu_4631_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U484(
    .din0(choice_0_81_0_reload),
    .din1(choice_1_81_0_reload),
    .din2(choice_2_81_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_105_fu_4640_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U485(
    .din0(choice_0_82_0_reload),
    .din1(choice_1_82_0_reload),
    .din2(choice_2_82_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_106_fu_4649_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U486(
    .din0(choice_0_83_0_reload),
    .din1(choice_1_83_0_reload),
    .din2(choice_2_83_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_107_fu_4658_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U487(
    .din0(choice_0_84_0_reload),
    .din1(choice_1_84_0_reload),
    .din2(choice_2_84_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_108_fu_4667_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U488(
    .din0(choice_0_85_0_reload),
    .din1(choice_1_85_0_reload),
    .din2(choice_2_85_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_109_fu_4676_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U489(
    .din0(choice_0_86_0_reload),
    .din1(choice_1_86_0_reload),
    .din2(choice_2_86_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_110_fu_4685_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U490(
    .din0(choice_0_87_0_reload),
    .din1(choice_1_87_0_reload),
    .din2(choice_2_87_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_111_fu_4694_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U491(
    .din0(choice_0_88_0_reload),
    .din1(choice_1_88_0_reload),
    .din2(choice_2_88_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_112_fu_4703_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U492(
    .din0(choice_0_89_0_reload),
    .din1(choice_1_89_0_reload),
    .din2(choice_2_89_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_113_fu_4712_p5)
);

TrellisBuilder_mux_165_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 5 ),
    .dout_WIDTH( 1 ))
mux_165_1_1_1_U493(
    .din0(1'd0),
    .din1(tmp_99_fu_4586_p5),
    .din2(tmp_100_fu_4595_p5),
    .din3(tmp_101_fu_4604_p5),
    .din4(tmp_102_fu_4613_p5),
    .din5(tmp_103_fu_4622_p5),
    .din6(tmp_104_fu_4631_p5),
    .din7(tmp_105_fu_4640_p5),
    .din8(tmp_106_fu_4649_p5),
    .din9(tmp_107_fu_4658_p5),
    .din10(tmp_108_fu_4667_p5),
    .din11(tmp_109_fu_4676_p5),
    .din12(tmp_110_fu_4685_p5),
    .din13(tmp_111_fu_4694_p5),
    .din14(tmp_112_fu_4703_p5),
    .din15(tmp_113_fu_4712_p5),
    .din16(tmp_23_reg_7880_pp0_iter3_reg),
    .dout(tmp_20_fu_4721_p18)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U494(
    .din0(choice_0_90_0_reload),
    .din1(choice_1_90_0_reload),
    .din2(choice_2_90_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_114_fu_4758_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U495(
    .din0(choice_0_91_0_reload),
    .din1(choice_1_91_0_reload),
    .din2(choice_2_91_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_115_fu_4767_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U496(
    .din0(choice_0_92_0_reload),
    .din1(choice_1_92_0_reload),
    .din2(choice_2_92_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_116_fu_4776_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U497(
    .din0(choice_0_93_0_reload),
    .din1(choice_1_93_0_reload),
    .din2(choice_2_93_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_117_fu_4785_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U498(
    .din0(choice_0_94_0_reload),
    .din1(choice_1_94_0_reload),
    .din2(choice_2_94_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_118_fu_4794_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U499(
    .din0(choice_0_95_0_reload),
    .din1(choice_1_95_0_reload),
    .din2(choice_2_95_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_119_fu_4803_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U500(
    .din0(choice_0_96_0_reload),
    .din1(choice_1_96_0_reload),
    .din2(choice_2_96_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_120_fu_4812_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U501(
    .din0(choice_0_97_0_reload),
    .din1(choice_1_97_0_reload),
    .din2(choice_2_97_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_121_fu_4821_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U502(
    .din0(choice_0_98_0_reload),
    .din1(choice_1_98_0_reload),
    .din2(choice_2_98_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_122_fu_4830_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U503(
    .din0(choice_0_99_0_reload),
    .din1(choice_1_99_0_reload),
    .din2(choice_2_99_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_123_fu_4839_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U504(
    .din0(choice_0_100_0_reload),
    .din1(choice_1_100_0_reload),
    .din2(choice_2_100_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_124_fu_4848_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U505(
    .din0(choice_0_101_0_reload),
    .din1(choice_1_101_0_reload),
    .din2(choice_2_101_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_125_fu_4857_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U506(
    .din0(choice_0_102_0_reload),
    .din1(choice_1_102_0_reload),
    .din2(choice_2_102_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_126_fu_4866_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U507(
    .din0(choice_0_103_0_reload),
    .din1(choice_1_103_0_reload),
    .din2(choice_2_103_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_127_fu_4875_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U508(
    .din0(choice_0_104_0_reload),
    .din1(choice_1_104_0_reload),
    .din2(choice_2_104_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_128_fu_4884_p5)
);

TrellisBuilder_mux_165_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 5 ),
    .dout_WIDTH( 1 ))
mux_165_1_1_1_U509(
    .din0(1'd0),
    .din1(tmp_114_fu_4758_p5),
    .din2(tmp_115_fu_4767_p5),
    .din3(tmp_116_fu_4776_p5),
    .din4(tmp_117_fu_4785_p5),
    .din5(tmp_118_fu_4794_p5),
    .din6(tmp_119_fu_4803_p5),
    .din7(tmp_120_fu_4812_p5),
    .din8(tmp_121_fu_4821_p5),
    .din9(tmp_122_fu_4830_p5),
    .din10(tmp_123_fu_4839_p5),
    .din11(tmp_124_fu_4848_p5),
    .din12(tmp_125_fu_4857_p5),
    .din13(tmp_126_fu_4866_p5),
    .din14(tmp_127_fu_4875_p5),
    .din15(tmp_128_fu_4884_p5),
    .din16(tmp_23_reg_7880_pp0_iter3_reg),
    .dout(tmp_21_fu_4893_p18)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U510(
    .din0(choice_0_105_0_reload),
    .din1(choice_1_105_0_reload),
    .din2(choice_2_105_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_129_fu_4930_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U511(
    .din0(choice_0_106_0_reload),
    .din1(choice_1_106_0_reload),
    .din2(choice_2_106_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_130_fu_4939_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U512(
    .din0(choice_0_107_0_reload),
    .din1(choice_1_107_0_reload),
    .din2(choice_2_107_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_131_fu_4948_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U513(
    .din0(choice_0_108_0_reload),
    .din1(choice_1_108_0_reload),
    .din2(choice_2_108_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_132_fu_4957_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U514(
    .din0(choice_0_109_0_reload),
    .din1(choice_1_109_0_reload),
    .din2(choice_2_109_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_133_fu_4966_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U515(
    .din0(choice_0_110_0_reload),
    .din1(choice_1_110_0_reload),
    .din2(choice_2_110_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_134_fu_4975_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U516(
    .din0(choice_0_111_0_reload),
    .din1(choice_1_111_0_reload),
    .din2(choice_2_111_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_135_fu_4984_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U517(
    .din0(choice_0_112_0_reload),
    .din1(choice_1_112_0_reload),
    .din2(choice_2_112_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_136_fu_4993_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U518(
    .din0(choice_0_113_0_reload),
    .din1(choice_1_113_0_reload),
    .din2(choice_2_113_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_137_fu_5002_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U519(
    .din0(choice_0_114_0_reload),
    .din1(choice_1_114_0_reload),
    .din2(choice_2_114_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_138_fu_5011_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U520(
    .din0(choice_0_115_0_reload),
    .din1(choice_1_115_0_reload),
    .din2(choice_2_115_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_139_fu_5020_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U521(
    .din0(choice_0_116_0_reload),
    .din1(choice_1_116_0_reload),
    .din2(choice_2_116_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_140_fu_5029_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U522(
    .din0(choice_0_117_0_reload),
    .din1(choice_1_117_0_reload),
    .din2(choice_2_117_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_141_fu_5038_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U523(
    .din0(choice_0_118_0_reload),
    .din1(choice_1_118_0_reload),
    .din2(choice_2_118_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_142_fu_5047_p5)
);

TrellisBuilder_mux_32_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_32_1_1_1_U524(
    .din0(choice_0_119_0_reload),
    .din1(choice_1_119_0_reload),
    .din2(choice_2_119_0_reload),
    .din3(trunc_ln1065_fu_3669_p1),
    .dout(tmp_143_fu_5056_p5)
);

TrellisBuilder_mux_165_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 5 ),
    .dout_WIDTH( 1 ))
mux_165_1_1_1_U525(
    .din0(1'd0),
    .din1(tmp_129_fu_4930_p5),
    .din2(tmp_130_fu_4939_p5),
    .din3(tmp_131_fu_4948_p5),
    .din4(tmp_132_fu_4957_p5),
    .din5(tmp_133_fu_4966_p5),
    .din6(tmp_134_fu_4975_p5),
    .din7(tmp_135_fu_4984_p5),
    .din8(tmp_136_fu_4993_p5),
    .din9(tmp_137_fu_5002_p5),
    .din10(tmp_138_fu_5011_p5),
    .din11(tmp_139_fu_5020_p5),
    .din12(tmp_140_fu_5029_p5),
    .din13(tmp_141_fu_5038_p5),
    .din14(tmp_142_fu_5047_p5),
    .din15(tmp_143_fu_5056_p5),
    .din16(tmp_23_reg_7880_pp0_iter3_reg),
    .dout(tmp_22_fu_5065_p18)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U526(
    .din0(prevState_V_q0),
    .din1(prevState_V_1_q0),
    .din2(tmp_144_reg_7898),
    .dout(tmp_fu_5102_p4)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U527(
    .din0(prevState_V_2_q0),
    .din1(prevState_V_3_q0),
    .din2(tmp_144_reg_7898),
    .dout(tmp_1_fu_5111_p4)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U528(
    .din0(prevState_V_4_q0),
    .din1(prevState_V_5_q0),
    .din2(tmp_144_reg_7898),
    .dout(tmp_2_fu_5120_p4)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U529(
    .din0(prevState_V_6_q0),
    .din1(prevState_V_7_q0),
    .din2(tmp_144_reg_7898),
    .dout(tmp_3_fu_5129_p4)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U530(
    .din0(prevState_V_8_q0),
    .din1(prevState_V_9_q0),
    .din2(tmp_144_reg_7898),
    .dout(tmp_4_fu_5138_p4)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U531(
    .din0(prevState_V_10_q0),
    .din1(prevState_V_11_q0),
    .din2(tmp_144_reg_7898),
    .dout(tmp_5_fu_5147_p4)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U532(
    .din0(prevState_V_12_q0),
    .din1(prevState_V_13_q0),
    .din2(tmp_144_reg_7898),
    .dout(tmp_6_fu_5156_p4)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U533(
    .din0(prevState_V_14_q0),
    .din1(prevState_V_15_q0),
    .din2(tmp_144_reg_7898),
    .dout(tmp_7_fu_5165_p4)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U534(
    .din0(prevState_V_16_q0),
    .din1(prevState_V_17_q0),
    .din2(tmp_144_reg_7898),
    .dout(tmp_8_fu_5174_p4)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U535(
    .din0(prevState_V_18_q0),
    .din1(prevState_V_19_q0),
    .din2(tmp_144_reg_7898),
    .dout(tmp_9_fu_5183_p4)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U536(
    .din0(prevState_V_20_q0),
    .din1(prevState_V_21_q0),
    .din2(tmp_144_reg_7898),
    .dout(tmp_s_fu_5192_p4)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U537(
    .din0(prevState_V_22_q0),
    .din1(prevState_V_23_q0),
    .din2(tmp_144_reg_7898),
    .dout(tmp_10_fu_5201_p4)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U538(
    .din0(prevState_V_24_q0),
    .din1(prevState_V_25_q0),
    .din2(tmp_144_reg_7898),
    .dout(tmp_11_fu_5210_p4)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U539(
    .din0(prevState_V_26_q0),
    .din1(prevState_V_27_q0),
    .din2(tmp_144_reg_7898),
    .dout(tmp_12_fu_5219_p4)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U540(
    .din0(prevState_V_28_q0),
    .din1(prevState_V_29_q0),
    .din2(tmp_144_reg_7898),
    .dout(tmp_13_fu_5228_p4)
);

TrellisBuilder_mux_165_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 6 ),
    .din5_WIDTH( 6 ),
    .din6_WIDTH( 6 ),
    .din7_WIDTH( 6 ),
    .din8_WIDTH( 6 ),
    .din9_WIDTH( 6 ),
    .din10_WIDTH( 6 ),
    .din11_WIDTH( 6 ),
    .din12_WIDTH( 6 ),
    .din13_WIDTH( 6 ),
    .din14_WIDTH( 6 ),
    .din15_WIDTH( 6 ),
    .din16_WIDTH( 5 ),
    .dout_WIDTH( 6 ))
mux_165_6_1_1_U541(
    .din0(6'd0),
    .din1(tmp_reg_8107),
    .din2(tmp_1_reg_8112),
    .din3(tmp_2_reg_8117),
    .din4(tmp_3_reg_8122),
    .din5(tmp_4_reg_8127),
    .din6(tmp_5_reg_8132),
    .din7(tmp_6_reg_8137),
    .din8(tmp_7_reg_8142),
    .din9(tmp_8_reg_8147),
    .din10(tmp_9_reg_8152),
    .din11(tmp_s_reg_8157),
    .din12(tmp_10_reg_8162),
    .din13(tmp_11_reg_8167),
    .din14(tmp_12_reg_8172),
    .din15(tmp_13_reg_8177),
    .din16(tmp_23_reg_7880_pp0_iter3_reg),
    .dout(tmp_14_fu_5237_p18)
);

TrellisBuilder_mux_83_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_83_1_1_1_U542(
    .din0(tmp_15_reg_8067_pp0_iter4_reg),
    .din1(tmp_16_reg_8072_pp0_iter4_reg),
    .din2(tmp_17_reg_8077_pp0_iter4_reg),
    .din3(tmp_18_reg_8082_pp0_iter4_reg),
    .din4(tmp_19_reg_8087_pp0_iter4_reg),
    .din5(tmp_20_reg_8092_pp0_iter4_reg),
    .din6(tmp_21_reg_8097_pp0_iter4_reg),
    .din7(tmp_22_reg_8102_pp0_iter4_reg),
    .din8(Bucket_V_1_fu_994),
    .dout(p_Repl2_s_fu_5977_p10)
);

TrellisBuilder_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            Bucket_V_1_fu_994 <= Bucket_V;
        end else if (((ap_enable_reg_pp0_iter5 == 1'b1) & (empty_49_reg_8250 == 1'd1))) begin
            Bucket_V_1_fu_994 <= 3'd0;
        end else if ((1'b1 == ap_condition_4826)) begin
            Bucket_V_1_fu_994 <= 3'd1;
        end else if ((1'b1 == ap_condition_4822)) begin
            Bucket_V_1_fu_994 <= 3'd2;
        end else if ((1'b1 == ap_condition_4817)) begin
            Bucket_V_1_fu_994 <= 3'd3;
        end else if ((1'b1 == ap_condition_4811)) begin
            Bucket_V_1_fu_994 <= 3'd4;
        end else if ((1'b1 == ap_condition_4804)) begin
            Bucket_V_1_fu_994 <= 3'd5;
        end else if ((1'b1 == ap_condition_4796)) begin
            Bucket_V_1_fu_994 <= 3'd6;
        end else if ((1'b1 == ap_condition_4787)) begin
            Bucket_V_1_fu_994 <= select_ln1484_fu_5916_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to3 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter4_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to3 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter4_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to3 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter4_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to3 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter4_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        count_fu_1010 <= 6'd0;
    end else if (((icmp_ln1453_reg_7865 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        count_fu_1010 <= add_ln1492_reg_7869;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_fu_1002 <= 7'd43;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        k_fu_1002 <= k_1_fu_6001_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Val2_s_fu_1006 <= p_Result_s;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_Val2_s_fu_1006 <= p_Result_1_fu_5991_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        phi_ln1369_fu_998 <= prevState_V_28_load;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        phi_ln1369_fu_998 <= empty_34_fu_5259_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln1492_reg_7869 <= add_ln1492_fu_3626_p2;
        icmp_ln1453_reg_7865 <= icmp_ln1453_fu_3620_p2;
        icmp_ln1453_reg_7865_pp0_iter1_reg <= icmp_ln1453_reg_7865;
        icmp_ln1453_reg_7865_pp0_iter2_reg <= icmp_ln1453_reg_7865_pp0_iter1_reg;
        icmp_ln1453_reg_7865_pp0_iter3_reg <= icmp_ln1453_reg_7865_pp0_iter2_reg;
        icmp_ln1453_reg_7865_pp0_iter4_reg <= icmp_ln1453_reg_7865_pp0_iter3_reg;
        tmp_10_reg_8162 <= tmp_10_fu_5201_p4;
        tmp_11_reg_8167 <= tmp_11_fu_5210_p4;
        tmp_12_reg_8172 <= tmp_12_fu_5219_p4;
        tmp_13_reg_8177 <= tmp_13_fu_5228_p4;
        tmp_1_reg_8112 <= tmp_1_fu_5111_p4;
        tmp_2_reg_8117 <= tmp_2_fu_5120_p4;
        tmp_3_reg_8122 <= tmp_3_fu_5129_p4;
        tmp_4_reg_8127 <= tmp_4_fu_5138_p4;
        tmp_5_reg_8132 <= tmp_5_fu_5147_p4;
        tmp_6_reg_8137 <= tmp_6_fu_5156_p4;
        tmp_7_reg_8142 <= tmp_7_fu_5165_p4;
        tmp_8_reg_8147 <= tmp_8_fu_5174_p4;
        tmp_9_reg_8152 <= tmp_9_fu_5183_p4;
        tmp_reg_8107 <= tmp_fu_5102_p4;
        tmp_s_reg_8157 <= tmp_s_fu_5192_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (empty_94_fu_5590_p2 == 1'd0) & (empty_79_fu_5508_p2 == 1'd0) & (empty_64_fu_5426_p2 == 1'd0) & (empty_49_fu_5344_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        empty_109_reg_8266 <= empty_109_fu_5672_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (empty_109_fu_5672_p2 == 1'd0) & (empty_94_fu_5590_p2 == 1'd0) & (empty_79_fu_5508_p2 == 1'd0) & (empty_64_fu_5426_p2 == 1'd0) & (empty_49_fu_5344_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        empty_124_reg_8270 <= empty_124_fu_5754_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (empty_124_fu_5754_p2 == 1'd0) & (empty_109_fu_5672_p2 == 1'd0) & (empty_94_fu_5590_p2 == 1'd0) & (empty_79_fu_5508_p2 == 1'd0) & (empty_64_fu_5426_p2 == 1'd0) & (empty_49_fu_5344_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        empty_139_reg_8274 <= empty_139_fu_5836_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        empty_49_reg_8250 <= empty_49_fu_5344_p2;
        tmp_144_reg_7898 <= phi_ln1369_fu_998[32'd2];
        tmp_15_reg_8067 <= tmp_15_fu_3861_p18;
        tmp_15_reg_8067_pp0_iter4_reg <= tmp_15_reg_8067;
        tmp_16_reg_8072 <= tmp_16_fu_4033_p18;
        tmp_16_reg_8072_pp0_iter4_reg <= tmp_16_reg_8072;
        tmp_17_reg_8077 <= tmp_17_fu_4205_p18;
        tmp_17_reg_8077_pp0_iter4_reg <= tmp_17_reg_8077;
        tmp_18_reg_8082 <= tmp_18_fu_4377_p18;
        tmp_18_reg_8082_pp0_iter4_reg <= tmp_18_reg_8082;
        tmp_19_reg_8087 <= tmp_19_fu_4549_p18;
        tmp_19_reg_8087_pp0_iter4_reg <= tmp_19_reg_8087;
        tmp_20_reg_8092 <= tmp_20_fu_4721_p18;
        tmp_20_reg_8092_pp0_iter4_reg <= tmp_20_reg_8092;
        tmp_21_reg_8097 <= tmp_21_fu_4893_p18;
        tmp_21_reg_8097_pp0_iter4_reg <= tmp_21_reg_8097;
        tmp_22_reg_8102 <= tmp_22_fu_5065_p18;
        tmp_22_reg_8102_pp0_iter4_reg <= tmp_22_reg_8102;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (empty_49_fu_5344_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        empty_64_reg_8254 <= empty_64_fu_5426_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (empty_64_fu_5426_p2 == 1'd0) & (empty_49_fu_5344_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        empty_79_reg_8258 <= empty_79_fu_5508_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (empty_79_fu_5508_p2 == 1'd0) & (empty_64_fu_5426_p2 == 1'd0) & (empty_49_fu_5344_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        empty_94_reg_8262 <= empty_94_fu_5590_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (empty_139_fu_5836_p2 == 1'd0) & (empty_124_fu_5754_p2 == 1'd0) & (empty_109_fu_5672_p2 == 1'd0) & (empty_94_fu_5590_p2 == 1'd0) & (empty_79_fu_5508_p2 == 1'd0) & (empty_64_fu_5426_p2 == 1'd0) & (empty_49_fu_5344_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        icmp_ln1065_1_reg_8283 <= icmp_ln1065_1_fu_5847_p2;
        icmp_ln1065_2_reg_8288 <= icmp_ln1065_2_fu_5852_p2;
        icmp_ln1065_3_reg_8293 <= icmp_ln1065_3_fu_5857_p2;
        icmp_ln1065_4_reg_8298 <= icmp_ln1065_4_fu_5862_p2;
        icmp_ln1065_5_reg_8303 <= icmp_ln1065_5_fu_5867_p2;
        icmp_ln1065_6_reg_8308 <= icmp_ln1065_6_fu_5872_p2;
        icmp_ln1065_7_reg_8313 <= icmp_ln1065_7_fu_5877_p2;
        icmp_ln1065_reg_8278 <= icmp_ln1065_fu_5842_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1453_fu_3620_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub_ln1456_reg_7874 <= sub_ln1456_fu_3632_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_14_reg_8182 <= tmp_14_fu_5237_p18;
        tmp_23_reg_7880_pp0_iter1_reg <= tmp_23_reg_7880;
        tmp_23_reg_7880_pp0_iter2_reg <= tmp_23_reg_7880_pp0_iter1_reg;
        tmp_23_reg_7880_pp0_iter3_reg <= tmp_23_reg_7880_pp0_iter2_reg;
        urem_ln1065_reg_7893 <= grp_fu_3657_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1453_reg_7865 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_23_reg_7880 <= {{mul_ln1065_fu_3641_p2[12:8]}};
    end
end

always @ (*) begin
    if (((icmp_ln1453_reg_7865 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln1453_reg_7865_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter4_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter4_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to3 = 1'b1;
    end else begin
        ap_idle_pp0_0to3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to5 = 1'b1;
    end else begin
        ap_idle_pp0_1to5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_count_1 = 6'd0;
    end else begin
        ap_sig_allocacmp_count_1 = count_fu_1010;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1453_reg_7865_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_Val2_1_out_ap_vld = 1'b1;
    end else begin
        p_Val2_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_10_ce0 = 1'b1;
    end else begin
        prevState_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_11_ce0 = 1'b1;
    end else begin
        prevState_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_12_ce0 = 1'b1;
    end else begin
        prevState_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_13_ce0 = 1'b1;
    end else begin
        prevState_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_14_ce0 = 1'b1;
    end else begin
        prevState_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_15_ce0 = 1'b1;
    end else begin
        prevState_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_16_ce0 = 1'b1;
    end else begin
        prevState_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_17_ce0 = 1'b1;
    end else begin
        prevState_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_18_ce0 = 1'b1;
    end else begin
        prevState_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_19_ce0 = 1'b1;
    end else begin
        prevState_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_1_ce0 = 1'b1;
    end else begin
        prevState_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_20_ce0 = 1'b1;
    end else begin
        prevState_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_21_ce0 = 1'b1;
    end else begin
        prevState_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_22_ce0 = 1'b1;
    end else begin
        prevState_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_23_ce0 = 1'b1;
    end else begin
        prevState_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_24_ce0 = 1'b1;
    end else begin
        prevState_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_25_ce0 = 1'b1;
    end else begin
        prevState_V_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_26_ce0 = 1'b1;
    end else begin
        prevState_V_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_27_ce0 = 1'b1;
    end else begin
        prevState_V_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_28_ce0 = 1'b1;
    end else begin
        prevState_V_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_29_ce0 = 1'b1;
    end else begin
        prevState_V_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_2_ce0 = 1'b1;
    end else begin
        prevState_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_3_ce0 = 1'b1;
    end else begin
        prevState_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_4_ce0 = 1'b1;
    end else begin
        prevState_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_5_ce0 = 1'b1;
    end else begin
        prevState_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_6_ce0 = 1'b1;
    end else begin
        prevState_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_7_ce0 = 1'b1;
    end else begin
        prevState_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_8_ce0 = 1'b1;
    end else begin
        prevState_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_9_ce0 = 1'b1;
    end else begin
        prevState_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        prevState_V_ce0 = 1'b1;
    end else begin
        prevState_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to5 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to3 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter4_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1492_fu_3626_p2 = (ap_sig_allocacmp_count_1 + 6'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_4787 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (empty_139_reg_8274 == 1'd0) & (empty_124_reg_8270 == 1'd0) & (empty_109_reg_8266 == 1'd0) & (empty_94_reg_8262 == 1'd0) & (empty_79_reg_8258 == 1'd0) & (empty_64_reg_8254 == 1'd0) & (empty_49_reg_8250 == 1'd0));
end

always @ (*) begin
    ap_condition_4796 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (empty_139_reg_8274 == 1'd1) & (empty_124_reg_8270 == 1'd0) & (empty_109_reg_8266 == 1'd0) & (empty_94_reg_8262 == 1'd0) & (empty_79_reg_8258 == 1'd0) & (empty_64_reg_8254 == 1'd0) & (empty_49_reg_8250 == 1'd0));
end

always @ (*) begin
    ap_condition_4804 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (empty_124_reg_8270 == 1'd1) & (empty_109_reg_8266 == 1'd0) & (empty_94_reg_8262 == 1'd0) & (empty_79_reg_8258 == 1'd0) & (empty_64_reg_8254 == 1'd0) & (empty_49_reg_8250 == 1'd0));
end

always @ (*) begin
    ap_condition_4811 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (empty_109_reg_8266 == 1'd1) & (empty_94_reg_8262 == 1'd0) & (empty_79_reg_8258 == 1'd0) & (empty_64_reg_8254 == 1'd0) & (empty_49_reg_8250 == 1'd0));
end

always @ (*) begin
    ap_condition_4817 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (empty_94_reg_8262 == 1'd1) & (empty_79_reg_8258 == 1'd0) & (empty_64_reg_8254 == 1'd0) & (empty_49_reg_8250 == 1'd0));
end

always @ (*) begin
    ap_condition_4822 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (empty_79_reg_8258 == 1'd1) & (empty_64_reg_8254 == 1'd0) & (empty_49_reg_8250 == 1'd0));
end

always @ (*) begin
    ap_condition_4826 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (empty_64_reg_8254 == 1'd1) & (empty_49_reg_8250 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign empty_100_fu_5621_p2 = ((tmp_14_reg_8182 == 6'd21) ? 1'b1 : 1'b0);

assign empty_101_fu_5626_p2 = ((tmp_14_reg_8182 == 6'd9) ? 1'b1 : 1'b0);

assign empty_102_fu_5631_p2 = (empty_96_fu_5601_p2 | empty_95_fu_5596_p2);

assign empty_103_fu_5637_p2 = ((tmp_14_reg_8182 == 6'd4) ? 1'b1 : 1'b0);

assign empty_104_fu_5642_p2 = (empty_97_fu_5606_p2 | empty_102_fu_5631_p2);

assign empty_105_fu_5648_p2 = (empty_98_fu_5611_p2 | empty_104_fu_5642_p2);

assign empty_106_fu_5654_p2 = (empty_99_fu_5616_p2 | empty_105_fu_5648_p2);

assign empty_107_fu_5660_p2 = (empty_106_fu_5654_p2 | empty_100_fu_5621_p2);

assign empty_108_fu_5666_p2 = (empty_107_fu_5660_p2 | empty_101_fu_5626_p2);

assign empty_109_fu_5672_p2 = (empty_108_fu_5666_p2 | empty_103_fu_5637_p2);

assign empty_110_fu_5678_p2 = ((tmp_14_reg_8182 == 6'd58) ? 1'b1 : 1'b0);

assign empty_111_fu_5683_p2 = ((tmp_14_reg_8182 == 6'd55) ? 1'b1 : 1'b0);

assign empty_112_fu_5688_p2 = ((tmp_14_reg_8182 == 6'd43) ? 1'b1 : 1'b0);

assign empty_113_fu_5693_p2 = ((tmp_14_reg_8182 == 6'd38) ? 1'b1 : 1'b0);

assign empty_114_fu_5698_p2 = ((tmp_14_reg_8182 == 6'd25) ? 1'b1 : 1'b0);

assign empty_115_fu_5703_p2 = ((tmp_14_reg_8182 == 6'd20) ? 1'b1 : 1'b0);

assign empty_116_fu_5708_p2 = ((tmp_14_reg_8182 == 6'd8) ? 1'b1 : 1'b0);

assign empty_117_fu_5713_p2 = (empty_111_fu_5683_p2 | empty_110_fu_5678_p2);

assign empty_118_fu_5719_p2 = ((tmp_14_reg_8182 == 6'd5) ? 1'b1 : 1'b0);

assign empty_119_fu_5724_p2 = (empty_117_fu_5713_p2 | empty_112_fu_5688_p2);

assign empty_120_fu_5730_p2 = (empty_119_fu_5724_p2 | empty_113_fu_5693_p2);

assign empty_121_fu_5736_p2 = (empty_120_fu_5730_p2 | empty_114_fu_5698_p2);

assign empty_122_fu_5742_p2 = (empty_121_fu_5736_p2 | empty_115_fu_5703_p2);

assign empty_123_fu_5748_p2 = (empty_122_fu_5742_p2 | empty_116_fu_5708_p2);

assign empty_124_fu_5754_p2 = (empty_123_fu_5748_p2 | empty_118_fu_5719_p2);

assign empty_125_fu_5760_p2 = ((tmp_14_reg_8182 == 6'd57) ? 1'b1 : 1'b0);

assign empty_126_fu_5765_p2 = ((tmp_14_reg_8182 == 6'd52) ? 1'b1 : 1'b0);

assign empty_127_fu_5770_p2 = ((tmp_14_reg_8182 == 6'd40) ? 1'b1 : 1'b0);

assign empty_128_fu_5775_p2 = ((tmp_14_reg_8182 == 6'd37) ? 1'b1 : 1'b0);

assign empty_129_fu_5780_p2 = ((tmp_14_reg_8182 == 6'd26) ? 1'b1 : 1'b0);

assign empty_130_fu_5785_p2 = ((tmp_14_reg_8182 == 6'd23) ? 1'b1 : 1'b0);

assign empty_131_fu_5790_p2 = ((tmp_14_reg_8182 == 6'd11) ? 1'b1 : 1'b0);

assign empty_132_fu_5795_p2 = (empty_126_fu_5765_p2 | empty_125_fu_5760_p2);

assign empty_133_fu_5801_p2 = ((tmp_14_reg_8182 == 6'd6) ? 1'b1 : 1'b0);

assign empty_134_fu_5806_p2 = (empty_132_fu_5795_p2 | empty_127_fu_5770_p2);

assign empty_135_fu_5812_p2 = (empty_134_fu_5806_p2 | empty_128_fu_5775_p2);

assign empty_136_fu_5818_p2 = (empty_135_fu_5812_p2 | empty_129_fu_5780_p2);

assign empty_137_fu_5824_p2 = (empty_136_fu_5818_p2 | empty_130_fu_5785_p2);

assign empty_138_fu_5830_p2 = (empty_137_fu_5824_p2 | empty_131_fu_5790_p2);

assign empty_139_fu_5836_p2 = (empty_138_fu_5830_p2 | empty_133_fu_5801_p2);

assign empty_34_fu_5259_p1 = tmp_14_fu_5237_p18[2:0];

assign empty_35_fu_5268_p2 = ((tmp_14_reg_8182 == 6'd63) ? 1'b1 : 1'b0);

assign empty_36_fu_5273_p2 = ((tmp_14_reg_8182 == 6'd50) ? 1'b1 : 1'b0);

assign empty_37_fu_5278_p2 = ((tmp_14_reg_8182 == 6'd46) ? 1'b1 : 1'b0);

assign empty_38_fu_5283_p2 = ((tmp_14_reg_8182 == 6'd35) ? 1'b1 : 1'b0);

assign empty_39_fu_5288_p2 = ((tmp_14_reg_8182 == 6'd28) ? 1'b1 : 1'b0);

assign empty_40_fu_5293_p2 = ((tmp_14_reg_8182 == 6'd17) ? 1'b1 : 1'b0);

assign empty_41_fu_5298_p2 = ((tmp_14_reg_8182 == 6'd13) ? 1'b1 : 1'b0);

assign empty_42_fu_5303_p2 = (empty_36_fu_5273_p2 | empty_35_fu_5268_p2);

assign empty_43_fu_5309_p2 = ((tmp_14_reg_8182 == 6'd0) ? 1'b1 : 1'b0);

assign empty_44_fu_5314_p2 = (empty_42_fu_5303_p2 | empty_37_fu_5278_p2);

assign empty_45_fu_5320_p2 = (empty_44_fu_5314_p2 | empty_38_fu_5283_p2);

assign empty_46_fu_5326_p2 = (empty_45_fu_5320_p2 | empty_39_fu_5288_p2);

assign empty_47_fu_5332_p2 = (empty_46_fu_5326_p2 | empty_40_fu_5293_p2);

assign empty_48_fu_5338_p2 = (empty_47_fu_5332_p2 | empty_41_fu_5298_p2);

assign empty_49_fu_5344_p2 = (empty_48_fu_5338_p2 | empty_43_fu_5309_p2);

assign empty_50_fu_5350_p2 = ((tmp_14_reg_8182 == 6'd62) ? 1'b1 : 1'b0);

assign empty_51_fu_5355_p2 = ((tmp_14_reg_8182 == 6'd51) ? 1'b1 : 1'b0);

assign empty_52_fu_5360_p2 = ((tmp_14_reg_8182 == 6'd47) ? 1'b1 : 1'b0);

assign empty_53_fu_5365_p2 = ((tmp_14_reg_8182 == 6'd34) ? 1'b1 : 1'b0);

assign empty_54_fu_5370_p2 = ((tmp_14_reg_8182 == 6'd29) ? 1'b1 : 1'b0);

assign empty_55_fu_5375_p2 = ((tmp_14_reg_8182 == 6'd16) ? 1'b1 : 1'b0);

assign empty_56_fu_5380_p2 = ((tmp_14_reg_8182 == 6'd12) ? 1'b1 : 1'b0);

assign empty_57_fu_5385_p2 = (empty_51_fu_5355_p2 | empty_50_fu_5350_p2);

assign empty_58_fu_5391_p2 = ((tmp_14_reg_8182 == 6'd1) ? 1'b1 : 1'b0);

assign empty_59_fu_5396_p2 = (empty_57_fu_5385_p2 | empty_52_fu_5360_p2);

assign empty_60_fu_5402_p2 = (empty_59_fu_5396_p2 | empty_53_fu_5365_p2);

assign empty_61_fu_5408_p2 = (empty_60_fu_5402_p2 | empty_54_fu_5370_p2);

assign empty_62_fu_5414_p2 = (empty_61_fu_5408_p2 | empty_55_fu_5375_p2);

assign empty_63_fu_5420_p2 = (empty_62_fu_5414_p2 | empty_56_fu_5380_p2);

assign empty_64_fu_5426_p2 = (empty_63_fu_5420_p2 | empty_58_fu_5391_p2);

assign empty_65_fu_5432_p2 = ((tmp_14_reg_8182 == 6'd61) ? 1'b1 : 1'b0);

assign empty_66_fu_5437_p2 = ((tmp_14_reg_8182 == 6'd48) ? 1'b1 : 1'b0);

assign empty_67_fu_5442_p2 = ((tmp_14_reg_8182 == 6'd44) ? 1'b1 : 1'b0);

assign empty_68_fu_5447_p2 = ((tmp_14_reg_8182 == 6'd33) ? 1'b1 : 1'b0);

assign empty_69_fu_5452_p2 = ((tmp_14_reg_8182 == 6'd30) ? 1'b1 : 1'b0);

assign empty_70_fu_5457_p2 = ((tmp_14_reg_8182 == 6'd19) ? 1'b1 : 1'b0);

assign empty_71_fu_5462_p2 = ((tmp_14_reg_8182 == 6'd15) ? 1'b1 : 1'b0);

assign empty_72_fu_5467_p2 = (empty_66_fu_5437_p2 | empty_65_fu_5432_p2);

assign empty_73_fu_5473_p2 = ((tmp_14_reg_8182 == 6'd2) ? 1'b1 : 1'b0);

assign empty_74_fu_5478_p2 = (empty_72_fu_5467_p2 | empty_67_fu_5442_p2);

assign empty_75_fu_5484_p2 = (empty_74_fu_5478_p2 | empty_68_fu_5447_p2);

assign empty_76_fu_5490_p2 = (empty_75_fu_5484_p2 | empty_69_fu_5452_p2);

assign empty_77_fu_5496_p2 = (empty_76_fu_5490_p2 | empty_70_fu_5457_p2);

assign empty_78_fu_5502_p2 = (empty_77_fu_5496_p2 | empty_71_fu_5462_p2);

assign empty_79_fu_5508_p2 = (empty_78_fu_5502_p2 | empty_73_fu_5473_p2);

assign empty_80_fu_5514_p2 = ((tmp_14_reg_8182 == 6'd60) ? 1'b1 : 1'b0);

assign empty_81_fu_5519_p2 = ((tmp_14_reg_8182 == 6'd49) ? 1'b1 : 1'b0);

assign empty_82_fu_5524_p2 = ((tmp_14_reg_8182 == 6'd45) ? 1'b1 : 1'b0);

assign empty_83_fu_5529_p2 = ((tmp_14_reg_8182 == 6'd32) ? 1'b1 : 1'b0);

assign empty_84_fu_5534_p2 = ((tmp_14_reg_8182 == 6'd31) ? 1'b1 : 1'b0);

assign empty_85_fu_5539_p2 = ((tmp_14_reg_8182 == 6'd18) ? 1'b1 : 1'b0);

assign empty_86_fu_5544_p2 = ((tmp_14_reg_8182 == 6'd14) ? 1'b1 : 1'b0);

assign empty_87_fu_5549_p2 = (empty_81_fu_5519_p2 | empty_80_fu_5514_p2);

assign empty_88_fu_5555_p2 = ((tmp_14_reg_8182 == 6'd3) ? 1'b1 : 1'b0);

assign empty_89_fu_5560_p2 = (empty_87_fu_5549_p2 | empty_82_fu_5524_p2);

assign empty_90_fu_5566_p2 = (empty_89_fu_5560_p2 | empty_83_fu_5529_p2);

assign empty_91_fu_5572_p2 = (empty_90_fu_5566_p2 | empty_84_fu_5534_p2);

assign empty_92_fu_5578_p2 = (empty_91_fu_5572_p2 | empty_85_fu_5539_p2);

assign empty_93_fu_5584_p2 = (empty_92_fu_5578_p2 | empty_86_fu_5544_p2);

assign empty_94_fu_5590_p2 = (empty_93_fu_5584_p2 | empty_88_fu_5555_p2);

assign empty_95_fu_5596_p2 = ((tmp_14_reg_8182 == 6'd59) ? 1'b1 : 1'b0);

assign empty_96_fu_5601_p2 = ((tmp_14_reg_8182 == 6'd54) ? 1'b1 : 1'b0);

assign empty_97_fu_5606_p2 = ((tmp_14_reg_8182 == 6'd42) ? 1'b1 : 1'b0);

assign empty_98_fu_5611_p2 = ((tmp_14_reg_8182 == 6'd39) ? 1'b1 : 1'b0);

assign empty_99_fu_5616_p2 = ((tmp_14_reg_8182 == 6'd24) ? 1'b1 : 1'b0);

assign grp_fu_3657_p1 = 6'd3;

assign icmp_ln1065_1_fu_5847_p2 = ((tmp_14_reg_8182 == 6'd10) ? 1'b1 : 1'b0);

assign icmp_ln1065_2_fu_5852_p2 = ((tmp_14_reg_8182 == 6'd22) ? 1'b1 : 1'b0);

assign icmp_ln1065_3_fu_5857_p2 = ((tmp_14_reg_8182 == 6'd27) ? 1'b1 : 1'b0);

assign icmp_ln1065_4_fu_5862_p2 = ((tmp_14_reg_8182 == 6'd36) ? 1'b1 : 1'b0);

assign icmp_ln1065_5_fu_5867_p2 = ((tmp_14_reg_8182 == 6'd41) ? 1'b1 : 1'b0);

assign icmp_ln1065_6_fu_5872_p2 = ((tmp_14_reg_8182 == 6'd53) ? 1'b1 : 1'b0);

assign icmp_ln1065_7_fu_5877_p2 = ((tmp_14_reg_8182 == 6'd56) ? 1'b1 : 1'b0);

assign icmp_ln1065_fu_5842_p2 = ((tmp_14_reg_8182 == 6'd7) ? 1'b1 : 1'b0);

assign icmp_ln1453_fu_3620_p2 = ((ap_sig_allocacmp_count_1 == 6'd44) ? 1'b1 : 1'b0);

assign k_1_fu_6001_p2 = ($signed(k_fu_1002) + $signed(7'd127));

assign k_cast_fu_5967_p1 = k_fu_1002;

assign mul_ln1065_fu_3641_p0 = mul_ln1065_fu_3641_p00;

assign mul_ln1065_fu_3641_p00 = sub_ln1456_reg_7874;

assign mul_ln1065_fu_3641_p1 = 13'd86;

assign or_ln1484_1_fu_5882_p2 = (icmp_ln1065_3_reg_8293 | icmp_ln1065_2_reg_8288);

assign or_ln1484_2_fu_5905_p2 = (or_ln1484_5_fu_5899_p2 | icmp_ln1065_reg_8278);

assign or_ln1484_3_fu_5895_p2 = (icmp_ln1065_5_reg_8303 | icmp_ln1065_4_reg_8298);

assign or_ln1484_4_fu_5891_p2 = (icmp_ln1065_7_reg_8313 | icmp_ln1065_6_reg_8308);

assign or_ln1484_5_fu_5899_p2 = (or_ln1484_4_fu_5891_p2 | or_ln1484_3_fu_5895_p2);

assign or_ln1484_6_fu_5910_p2 = (or_ln1484_fu_5886_p2 | or_ln1484_2_fu_5905_p2);

assign or_ln1484_fu_5886_p2 = (or_ln1484_1_fu_5882_p2 | icmp_ln1065_1_reg_8283);

always @ (*) begin
    p_Result_1_fu_5991_p4 = p_Val2_s_fu_1006;
    p_Result_1_fu_5991_p4[k_cast_fu_5967_p1] = |(p_Repl2_s_fu_5977_p10);
end

assign p_Val2_1_out = p_Val2_s_fu_1006;

assign prevState_V_10_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_11_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_12_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_13_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_14_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_15_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_16_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_17_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_18_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_19_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_1_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_20_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_21_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_22_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_23_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_24_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_25_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_26_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_27_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_28_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_29_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_2_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_3_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_4_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_5_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_6_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_7_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_8_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_9_address0 = zext_ln1065_1_fu_3692_p1;

assign prevState_V_address0 = zext_ln1065_1_fu_3692_p1;

assign select_ln1484_fu_5916_p3 = ((or_ln1484_6_fu_5910_p2[0:0] == 1'b1) ? 3'd7 : Bucket_V_1_fu_994);

assign sub_ln1456_fu_3632_p2 = ($signed(6'd46) - $signed(ap_sig_allocacmp_count_1));

assign tmp_145_fu_3684_p3 = {{trunc_ln1065_fu_3669_p1}, {trunc_ln1065_1_fu_3672_p1}};

assign trunc_ln1065_1_fu_3672_p1 = phi_ln1369_fu_998[1:0];

assign trunc_ln1065_fu_3669_p1 = urem_ln1065_reg_7893[1:0];

assign zext_ln1065_1_fu_3692_p1 = tmp_145_fu_3684_p3;

endmodule //TrellisBuilder_TrellisBuilder_Pipeline_VITIS_LOOP_1453_1
