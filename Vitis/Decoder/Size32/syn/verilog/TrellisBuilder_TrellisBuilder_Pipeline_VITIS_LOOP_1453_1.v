// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module TrellisBuilder_TrellisBuilder_Pipeline_VITIS_LOOP_1453_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_Result_s,
        Bucket_V,
        choice_reload,
        choice_1_reload,
        choice_2_reload,
        choice_3_reload,
        choice_4_reload,
        choice_5_reload,
        choice_23_reload,
        choice_24_reload,
        choice_25_reload,
        choice_26_reload,
        choice_27_reload,
        choice_28_reload,
        choice_43_reload,
        choice_44_reload,
        choice_45_reload,
        choice_46_reload,
        choice_47_reload,
        choice_42_reload,
        choice_41_reload,
        choice_40_reload,
        choice_39_reload,
        choice_38_reload,
        choice_37_reload,
        choice_36_reload,
        choice_35_reload,
        choice_34_reload,
        choice_33_reload,
        choice_32_reload,
        choice_31_reload,
        choice_30_reload,
        choice_29_reload,
        choice_22_reload,
        choice_21_reload,
        choice_20_reload,
        choice_19_reload,
        choice_18_reload,
        choice_17_reload,
        choice_16_reload,
        choice_15_reload,
        choice_14_reload,
        choice_13_reload,
        choice_12_reload,
        choice_11_reload,
        choice_10_reload,
        choice_9_reload,
        choice_8_reload,
        choice_7_reload,
        choice_6_reload,
        prevState_V_0_10_reload,
        prevState_V_1_10_reload,
        prevState_V_2_4_reload,
        prevState_V_3_4_reload,
        prevState_V_0_4_reload,
        prevState_V_1_4_reload,
        prevState_V_2_10_reload,
        prevState_V_3_10_reload,
        prevState_V_0_9_reload,
        prevState_V_1_9_reload,
        prevState_V_2_3_reload,
        prevState_V_3_3_reload,
        prevState_V_0_3_reload,
        prevState_V_1_3_reload,
        prevState_V_2_9_reload,
        prevState_V_3_9_reload,
        prevState_V_0_8_reload,
        prevState_V_1_8_reload,
        prevState_V_2_2_reload,
        prevState_V_3_2_reload,
        prevState_V_0_2_reload,
        prevState_V_1_2_reload,
        prevState_V_2_8_reload,
        prevState_V_3_8_reload,
        prevState_V_0_7_reload,
        prevState_V_1_7_reload,
        prevState_V_2_1_reload,
        prevState_V_3_1_reload,
        prevState_V_0_1_reload,
        prevState_V_1_1_reload,
        prevState_V_2_7_reload,
        prevState_V_3_7_reload,
        prevState_V_0_6_reload,
        prevState_V_1_6_reload,
        prevState_V_2_reload,
        prevState_V_3_reload,
        prevState_V_0_reload,
        prevState_V_1_reload,
        prevState_V_2_6_reload,
        prevState_V_3_6_reload,
        prevState_V_0_11_reload,
        prevState_V_1_11_reload,
        prevState_V_2_5_reload,
        prevState_V_3_5_reload,
        prevState_V_0_5_reload,
        prevState_V_1_5_reload,
        prevState_V_2_11_reload,
        prevState_V_3_11_reload,
        p_Val2_1_out,
        p_Val2_1_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] p_Result_s;
input  [2:0] Bucket_V;
input  [0:0] choice_reload;
input  [0:0] choice_1_reload;
input  [0:0] choice_2_reload;
input  [0:0] choice_3_reload;
input  [0:0] choice_4_reload;
input  [0:0] choice_5_reload;
input  [0:0] choice_23_reload;
input  [0:0] choice_24_reload;
input  [0:0] choice_25_reload;
input  [0:0] choice_26_reload;
input  [0:0] choice_27_reload;
input  [0:0] choice_28_reload;
input  [0:0] choice_43_reload;
input  [0:0] choice_44_reload;
input  [0:0] choice_45_reload;
input  [0:0] choice_46_reload;
input  [0:0] choice_47_reload;
input  [0:0] choice_42_reload;
input  [0:0] choice_41_reload;
input  [0:0] choice_40_reload;
input  [0:0] choice_39_reload;
input  [0:0] choice_38_reload;
input  [0:0] choice_37_reload;
input  [0:0] choice_36_reload;
input  [0:0] choice_35_reload;
input  [0:0] choice_34_reload;
input  [0:0] choice_33_reload;
input  [0:0] choice_32_reload;
input  [0:0] choice_31_reload;
input  [0:0] choice_30_reload;
input  [0:0] choice_29_reload;
input  [0:0] choice_22_reload;
input  [0:0] choice_21_reload;
input  [0:0] choice_20_reload;
input  [0:0] choice_19_reload;
input  [0:0] choice_18_reload;
input  [0:0] choice_17_reload;
input  [0:0] choice_16_reload;
input  [0:0] choice_15_reload;
input  [0:0] choice_14_reload;
input  [0:0] choice_13_reload;
input  [0:0] choice_12_reload;
input  [0:0] choice_11_reload;
input  [0:0] choice_10_reload;
input  [0:0] choice_9_reload;
input  [0:0] choice_8_reload;
input  [0:0] choice_7_reload;
input  [0:0] choice_6_reload;
input  [5:0] prevState_V_0_10_reload;
input  [5:0] prevState_V_1_10_reload;
input  [5:0] prevState_V_2_4_reload;
input  [5:0] prevState_V_3_4_reload;
input  [5:0] prevState_V_0_4_reload;
input  [5:0] prevState_V_1_4_reload;
input  [5:0] prevState_V_2_10_reload;
input  [5:0] prevState_V_3_10_reload;
input  [5:0] prevState_V_0_9_reload;
input  [5:0] prevState_V_1_9_reload;
input  [5:0] prevState_V_2_3_reload;
input  [5:0] prevState_V_3_3_reload;
input  [5:0] prevState_V_0_3_reload;
input  [5:0] prevState_V_1_3_reload;
input  [5:0] prevState_V_2_9_reload;
input  [5:0] prevState_V_3_9_reload;
input  [5:0] prevState_V_0_8_reload;
input  [5:0] prevState_V_1_8_reload;
input  [5:0] prevState_V_2_2_reload;
input  [5:0] prevState_V_3_2_reload;
input  [5:0] prevState_V_0_2_reload;
input  [5:0] prevState_V_1_2_reload;
input  [5:0] prevState_V_2_8_reload;
input  [5:0] prevState_V_3_8_reload;
input  [5:0] prevState_V_0_7_reload;
input  [5:0] prevState_V_1_7_reload;
input  [5:0] prevState_V_2_1_reload;
input  [5:0] prevState_V_3_1_reload;
input  [5:0] prevState_V_0_1_reload;
input  [5:0] prevState_V_1_1_reload;
input  [5:0] prevState_V_2_7_reload;
input  [5:0] prevState_V_3_7_reload;
input  [5:0] prevState_V_0_6_reload;
input  [5:0] prevState_V_1_6_reload;
input  [5:0] prevState_V_2_reload;
input  [5:0] prevState_V_3_reload;
input  [5:0] prevState_V_0_reload;
input  [5:0] prevState_V_1_reload;
input  [5:0] prevState_V_2_6_reload;
input  [5:0] prevState_V_3_6_reload;
input  [5:0] prevState_V_0_11_reload;
input  [5:0] prevState_V_1_11_reload;
input  [5:0] prevState_V_2_5_reload;
input  [5:0] prevState_V_3_5_reload;
input  [5:0] prevState_V_0_5_reload;
input  [5:0] prevState_V_1_5_reload;
input  [5:0] prevState_V_2_11_reload;
input  [5:0] prevState_V_3_11_reload;
output  [31:0] p_Val2_1_out;
output   p_Val2_1_out_ap_vld;

reg ap_idle;
reg p_Val2_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1453_fu_1036_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [0:0] tmp_20_fu_2160_p11;
reg   [0:0] tmp_20_reg_2494;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] tmp_21_fu_2184_p11;
reg   [0:0] tmp_21_reg_2499;
wire   [0:0] tmp_22_fu_2208_p11;
reg   [0:0] tmp_22_reg_2504;
wire   [0:0] tmp_23_fu_2232_p11;
reg   [0:0] tmp_23_reg_2509;
wire   [0:0] tmp_24_fu_2256_p11;
reg   [0:0] tmp_24_reg_2514;
wire   [0:0] tmp_25_fu_2280_p11;
reg   [0:0] tmp_25_reg_2519;
wire   [0:0] tmp_26_fu_2304_p11;
reg   [0:0] tmp_26_reg_2524;
wire   [0:0] tmp_27_fu_2328_p11;
reg   [0:0] tmp_27_reg_2529;
reg   [2:0] Bucket_V_1_fu_398;
wire   [2:0] select_ln1484_fu_2112_p3;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_Bucket_V_1_load;
wire    ap_block_pp0_stage0;
wire   [0:0] empty_41_fu_1473_p2;
wire   [0:0] empty_56_fu_1563_p2;
wire   [0:0] empty_71_fu_1653_p2;
wire   [0:0] empty_86_fu_1743_p2;
wire   [0:0] empty_101_fu_1833_p2;
wire   [0:0] empty_116_fu_1923_p2;
wire   [0:0] empty_131_fu_2013_p2;
reg   [2:0] prevState2_V_fu_402;
wire   [2:0] trunc_ln1453_fu_2352_p1;
reg   [5:0] k_fu_406;
wire   [5:0] k_1_fu_2406_p2;
reg   [31:0] p_Val2_s_fu_410;
reg   [31:0] p_Result_1_fu_2396_p4;
reg   [4:0] count_fu_414;
wire   [4:0] add_ln1492_fu_1042_p2;
reg   [4:0] ap_sig_allocacmp_count_1;
wire    ap_block_pp0_stage0_01001;
wire   [1:0] trunc_ln1065_fu_1065_p1;
wire   [5:0] tmp_7_fu_1069_p6;
wire   [5:0] tmp_8_fu_1083_p6;
wire   [0:0] tmp_fu_1097_p3;
wire   [5:0] tmp_9_fu_1107_p6;
wire   [5:0] tmp_s_fu_1121_p6;
wire   [0:0] tmp_1_fu_1135_p3;
wire   [5:0] tmp_10_fu_1145_p6;
wire   [5:0] tmp_11_fu_1159_p6;
wire   [0:0] tmp_2_fu_1173_p3;
wire   [5:0] tmp_12_fu_1183_p6;
wire   [5:0] tmp_13_fu_1197_p6;
wire   [0:0] tmp_3_fu_1211_p3;
wire   [5:0] tmp_14_fu_1221_p6;
wire   [5:0] tmp_15_fu_1235_p6;
wire   [0:0] tmp_4_fu_1249_p3;
wire   [5:0] tmp_16_fu_1259_p6;
wire   [5:0] tmp_17_fu_1273_p6;
wire   [0:0] tmp_5_fu_1287_p3;
wire   [5:0] tmp_18_fu_1297_p6;
wire   [0:0] tmp_6_fu_1311_p3;
wire   [5:0] tmp_fu_1097_p4;
wire   [5:0] tmp_1_fu_1135_p4;
wire   [5:0] tmp_2_fu_1173_p4;
wire   [5:0] tmp_3_fu_1211_p4;
wire   [5:0] tmp_4_fu_1249_p4;
wire   [5:0] tmp_5_fu_1287_p4;
wire   [5:0] tmp_6_fu_1311_p4;
wire   [4:0] sub_ln1456_fu_1051_p2;
wire   [5:0] tmp_19_fu_1321_p33;
wire   [0:0] empty_28_fu_1395_p2;
wire   [0:0] empty_27_fu_1389_p2;
wire   [0:0] empty_34_fu_1431_p2;
wire   [0:0] empty_29_fu_1401_p2;
wire   [0:0] empty_36_fu_1443_p2;
wire   [0:0] empty_30_fu_1407_p2;
wire   [0:0] empty_37_fu_1449_p2;
wire   [0:0] empty_31_fu_1413_p2;
wire   [0:0] empty_38_fu_1455_p2;
wire   [0:0] empty_32_fu_1419_p2;
wire   [0:0] empty_39_fu_1461_p2;
wire   [0:0] empty_33_fu_1425_p2;
wire   [0:0] empty_40_fu_1467_p2;
wire   [0:0] empty_35_fu_1437_p2;
wire   [0:0] empty_42_fu_1479_p2;
wire   [0:0] empty_43_fu_1485_p2;
wire   [0:0] empty_49_fu_1521_p2;
wire   [0:0] empty_44_fu_1491_p2;
wire   [0:0] empty_51_fu_1533_p2;
wire   [0:0] empty_45_fu_1497_p2;
wire   [0:0] empty_52_fu_1539_p2;
wire   [0:0] empty_46_fu_1503_p2;
wire   [0:0] empty_53_fu_1545_p2;
wire   [0:0] empty_47_fu_1509_p2;
wire   [0:0] empty_54_fu_1551_p2;
wire   [0:0] empty_48_fu_1515_p2;
wire   [0:0] empty_55_fu_1557_p2;
wire   [0:0] empty_50_fu_1527_p2;
wire   [0:0] empty_57_fu_1569_p2;
wire   [0:0] empty_58_fu_1575_p2;
wire   [0:0] empty_64_fu_1611_p2;
wire   [0:0] empty_59_fu_1581_p2;
wire   [0:0] empty_66_fu_1623_p2;
wire   [0:0] empty_60_fu_1587_p2;
wire   [0:0] empty_67_fu_1629_p2;
wire   [0:0] empty_61_fu_1593_p2;
wire   [0:0] empty_68_fu_1635_p2;
wire   [0:0] empty_62_fu_1599_p2;
wire   [0:0] empty_69_fu_1641_p2;
wire   [0:0] empty_63_fu_1605_p2;
wire   [0:0] empty_70_fu_1647_p2;
wire   [0:0] empty_65_fu_1617_p2;
wire   [0:0] empty_72_fu_1659_p2;
wire   [0:0] empty_73_fu_1665_p2;
wire   [0:0] empty_79_fu_1701_p2;
wire   [0:0] empty_74_fu_1671_p2;
wire   [0:0] empty_81_fu_1713_p2;
wire   [0:0] empty_75_fu_1677_p2;
wire   [0:0] empty_82_fu_1719_p2;
wire   [0:0] empty_76_fu_1683_p2;
wire   [0:0] empty_83_fu_1725_p2;
wire   [0:0] empty_77_fu_1689_p2;
wire   [0:0] empty_84_fu_1731_p2;
wire   [0:0] empty_78_fu_1695_p2;
wire   [0:0] empty_85_fu_1737_p2;
wire   [0:0] empty_80_fu_1707_p2;
wire   [0:0] empty_87_fu_1749_p2;
wire   [0:0] empty_88_fu_1755_p2;
wire   [0:0] empty_94_fu_1791_p2;
wire   [0:0] empty_89_fu_1761_p2;
wire   [0:0] empty_96_fu_1803_p2;
wire   [0:0] empty_90_fu_1767_p2;
wire   [0:0] empty_97_fu_1809_p2;
wire   [0:0] empty_91_fu_1773_p2;
wire   [0:0] empty_98_fu_1815_p2;
wire   [0:0] empty_92_fu_1779_p2;
wire   [0:0] empty_99_fu_1821_p2;
wire   [0:0] empty_93_fu_1785_p2;
wire   [0:0] empty_100_fu_1827_p2;
wire   [0:0] empty_95_fu_1797_p2;
wire   [0:0] empty_102_fu_1839_p2;
wire   [0:0] empty_103_fu_1845_p2;
wire   [0:0] empty_109_fu_1881_p2;
wire   [0:0] empty_104_fu_1851_p2;
wire   [0:0] empty_111_fu_1893_p2;
wire   [0:0] empty_105_fu_1857_p2;
wire   [0:0] empty_112_fu_1899_p2;
wire   [0:0] empty_106_fu_1863_p2;
wire   [0:0] empty_113_fu_1905_p2;
wire   [0:0] empty_107_fu_1869_p2;
wire   [0:0] empty_114_fu_1911_p2;
wire   [0:0] empty_108_fu_1875_p2;
wire   [0:0] empty_115_fu_1917_p2;
wire   [0:0] empty_110_fu_1887_p2;
wire   [0:0] empty_117_fu_1929_p2;
wire   [0:0] empty_118_fu_1935_p2;
wire   [0:0] empty_124_fu_1971_p2;
wire   [0:0] empty_119_fu_1941_p2;
wire   [0:0] empty_126_fu_1983_p2;
wire   [0:0] empty_120_fu_1947_p2;
wire   [0:0] empty_127_fu_1989_p2;
wire   [0:0] empty_121_fu_1953_p2;
wire   [0:0] empty_128_fu_1995_p2;
wire   [0:0] empty_122_fu_1959_p2;
wire   [0:0] empty_129_fu_2001_p2;
wire   [0:0] empty_123_fu_1965_p2;
wire   [0:0] empty_130_fu_2007_p2;
wire   [0:0] empty_125_fu_1977_p2;
wire   [0:0] icmp_ln1065_2_fu_2034_p2;
wire   [0:0] icmp_ln1065_3_fu_2040_p2;
wire   [0:0] or_ln1484_1_fu_2070_p2;
wire   [0:0] icmp_ln1065_1_fu_2028_p2;
wire   [0:0] icmp_ln1065_6_fu_2058_p2;
wire   [0:0] icmp_ln1065_7_fu_2064_p2;
wire   [0:0] icmp_ln1065_4_fu_2046_p2;
wire   [0:0] icmp_ln1065_5_fu_2052_p2;
wire   [0:0] or_ln1484_3_fu_2088_p2;
wire   [0:0] or_ln1484_4_fu_2082_p2;
wire   [0:0] or_ln1484_5_fu_2094_p2;
wire   [0:0] icmp_ln1065_fu_2022_p2;
wire   [0:0] or_ln1484_2_fu_2100_p2;
wire   [0:0] or_ln1484_fu_2076_p2;
wire   [0:0] or_ln1484_6_fu_2106_p2;
wire   [31:0] k_cast_fu_2369_p1;
wire   [0:0] p_Repl2_s_fu_2382_p10;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_1257;
reg    ap_condition_1266;
reg    ap_condition_1274;
reg    ap_condition_1281;
reg    ap_condition_1287;
reg    ap_condition_1292;
reg    ap_condition_1296;
reg    ap_condition_1299;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

TrellisBuilder_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
mux_42_6_1_1_U98(
    .din0(prevState_V_0_10_reload),
    .din1(prevState_V_1_10_reload),
    .din2(prevState_V_2_4_reload),
    .din3(prevState_V_3_4_reload),
    .din4(trunc_ln1065_fu_1065_p1),
    .dout(tmp_7_fu_1069_p6)
);

TrellisBuilder_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
mux_42_6_1_1_U99(
    .din0(prevState_V_0_4_reload),
    .din1(prevState_V_1_4_reload),
    .din2(prevState_V_2_10_reload),
    .din3(prevState_V_3_10_reload),
    .din4(trunc_ln1065_fu_1065_p1),
    .dout(tmp_8_fu_1083_p6)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U100(
    .din0(tmp_7_fu_1069_p6),
    .din1(tmp_8_fu_1083_p6),
    .din2(tmp_fu_1097_p3),
    .dout(tmp_fu_1097_p4)
);

TrellisBuilder_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
mux_42_6_1_1_U101(
    .din0(prevState_V_0_9_reload),
    .din1(prevState_V_1_9_reload),
    .din2(prevState_V_2_3_reload),
    .din3(prevState_V_3_3_reload),
    .din4(trunc_ln1065_fu_1065_p1),
    .dout(tmp_9_fu_1107_p6)
);

TrellisBuilder_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
mux_42_6_1_1_U102(
    .din0(prevState_V_0_3_reload),
    .din1(prevState_V_1_3_reload),
    .din2(prevState_V_2_9_reload),
    .din3(prevState_V_3_9_reload),
    .din4(trunc_ln1065_fu_1065_p1),
    .dout(tmp_s_fu_1121_p6)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U103(
    .din0(tmp_9_fu_1107_p6),
    .din1(tmp_s_fu_1121_p6),
    .din2(tmp_1_fu_1135_p3),
    .dout(tmp_1_fu_1135_p4)
);

TrellisBuilder_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
mux_42_6_1_1_U104(
    .din0(prevState_V_0_8_reload),
    .din1(prevState_V_1_8_reload),
    .din2(prevState_V_2_2_reload),
    .din3(prevState_V_3_2_reload),
    .din4(trunc_ln1065_fu_1065_p1),
    .dout(tmp_10_fu_1145_p6)
);

TrellisBuilder_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
mux_42_6_1_1_U105(
    .din0(prevState_V_0_2_reload),
    .din1(prevState_V_1_2_reload),
    .din2(prevState_V_2_8_reload),
    .din3(prevState_V_3_8_reload),
    .din4(trunc_ln1065_fu_1065_p1),
    .dout(tmp_11_fu_1159_p6)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U106(
    .din0(tmp_10_fu_1145_p6),
    .din1(tmp_11_fu_1159_p6),
    .din2(tmp_2_fu_1173_p3),
    .dout(tmp_2_fu_1173_p4)
);

TrellisBuilder_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
mux_42_6_1_1_U107(
    .din0(prevState_V_0_7_reload),
    .din1(prevState_V_1_7_reload),
    .din2(prevState_V_2_1_reload),
    .din3(prevState_V_3_1_reload),
    .din4(trunc_ln1065_fu_1065_p1),
    .dout(tmp_12_fu_1183_p6)
);

TrellisBuilder_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
mux_42_6_1_1_U108(
    .din0(prevState_V_0_1_reload),
    .din1(prevState_V_1_1_reload),
    .din2(prevState_V_2_7_reload),
    .din3(prevState_V_3_7_reload),
    .din4(trunc_ln1065_fu_1065_p1),
    .dout(tmp_13_fu_1197_p6)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U109(
    .din0(tmp_12_fu_1183_p6),
    .din1(tmp_13_fu_1197_p6),
    .din2(tmp_3_fu_1211_p3),
    .dout(tmp_3_fu_1211_p4)
);

TrellisBuilder_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
mux_42_6_1_1_U110(
    .din0(prevState_V_0_6_reload),
    .din1(prevState_V_1_6_reload),
    .din2(prevState_V_2_reload),
    .din3(prevState_V_3_reload),
    .din4(trunc_ln1065_fu_1065_p1),
    .dout(tmp_14_fu_1221_p6)
);

TrellisBuilder_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
mux_42_6_1_1_U111(
    .din0(prevState_V_0_reload),
    .din1(prevState_V_1_reload),
    .din2(prevState_V_2_6_reload),
    .din3(prevState_V_3_6_reload),
    .din4(trunc_ln1065_fu_1065_p1),
    .dout(tmp_15_fu_1235_p6)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U112(
    .din0(tmp_14_fu_1221_p6),
    .din1(tmp_15_fu_1235_p6),
    .din2(tmp_4_fu_1249_p3),
    .dout(tmp_4_fu_1249_p4)
);

TrellisBuilder_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
mux_42_6_1_1_U113(
    .din0(prevState_V_0_11_reload),
    .din1(prevState_V_1_11_reload),
    .din2(prevState_V_2_5_reload),
    .din3(prevState_V_3_5_reload),
    .din4(trunc_ln1065_fu_1065_p1),
    .dout(tmp_16_fu_1259_p6)
);

TrellisBuilder_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
mux_42_6_1_1_U114(
    .din0(prevState_V_0_5_reload),
    .din1(prevState_V_1_5_reload),
    .din2(prevState_V_2_11_reload),
    .din3(prevState_V_3_11_reload),
    .din4(trunc_ln1065_fu_1065_p1),
    .dout(tmp_17_fu_1273_p6)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U115(
    .din0(tmp_16_fu_1259_p6),
    .din1(tmp_17_fu_1273_p6),
    .din2(tmp_5_fu_1287_p3),
    .dout(tmp_5_fu_1287_p4)
);

TrellisBuilder_mux_42_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 6 ))
mux_42_6_1_1_U116(
    .din0(6'd0),
    .din1(6'd0),
    .din2(6'd0),
    .din3(6'd0),
    .din4(trunc_ln1065_fu_1065_p1),
    .dout(tmp_18_fu_1297_p6)
);

TrellisBuilder_mux_21_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 6 ))
mux_21_6_1_1_U117(
    .din0(tmp_18_fu_1297_p6),
    .din1(tmp_18_fu_1297_p6),
    .din2(tmp_6_fu_1311_p3),
    .dout(tmp_6_fu_1311_p4)
);

TrellisBuilder_mux_315_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 6 ),
    .din4_WIDTH( 6 ),
    .din5_WIDTH( 6 ),
    .din6_WIDTH( 6 ),
    .din7_WIDTH( 6 ),
    .din8_WIDTH( 6 ),
    .din9_WIDTH( 6 ),
    .din10_WIDTH( 6 ),
    .din11_WIDTH( 6 ),
    .din12_WIDTH( 6 ),
    .din13_WIDTH( 6 ),
    .din14_WIDTH( 6 ),
    .din15_WIDTH( 6 ),
    .din16_WIDTH( 6 ),
    .din17_WIDTH( 6 ),
    .din18_WIDTH( 6 ),
    .din19_WIDTH( 6 ),
    .din20_WIDTH( 6 ),
    .din21_WIDTH( 6 ),
    .din22_WIDTH( 6 ),
    .din23_WIDTH( 6 ),
    .din24_WIDTH( 6 ),
    .din25_WIDTH( 6 ),
    .din26_WIDTH( 6 ),
    .din27_WIDTH( 6 ),
    .din28_WIDTH( 6 ),
    .din29_WIDTH( 6 ),
    .din30_WIDTH( 6 ),
    .din31_WIDTH( 5 ),
    .dout_WIDTH( 6 ))
mux_315_6_1_1_U118(
    .din0(6'd0),
    .din1(6'd0),
    .din2(6'd0),
    .din3(tmp_fu_1097_p4),
    .din4(tmp_1_fu_1135_p4),
    .din5(tmp_2_fu_1173_p4),
    .din6(tmp_3_fu_1211_p4),
    .din7(tmp_4_fu_1249_p4),
    .din8(tmp_5_fu_1287_p4),
    .din9(tmp_6_fu_1311_p4),
    .din10(tmp_6_fu_1311_p4),
    .din11(tmp_6_fu_1311_p4),
    .din12(tmp_6_fu_1311_p4),
    .din13(tmp_6_fu_1311_p4),
    .din14(tmp_6_fu_1311_p4),
    .din15(tmp_6_fu_1311_p4),
    .din16(tmp_6_fu_1311_p4),
    .din17(tmp_6_fu_1311_p4),
    .din18(tmp_6_fu_1311_p4),
    .din19(tmp_6_fu_1311_p4),
    .din20(tmp_6_fu_1311_p4),
    .din21(tmp_6_fu_1311_p4),
    .din22(tmp_6_fu_1311_p4),
    .din23(tmp_6_fu_1311_p4),
    .din24(tmp_6_fu_1311_p4),
    .din25(tmp_6_fu_1311_p4),
    .din26(tmp_6_fu_1311_p4),
    .din27(tmp_6_fu_1311_p4),
    .din28(tmp_6_fu_1311_p4),
    .din29(tmp_6_fu_1311_p4),
    .din30(tmp_6_fu_1311_p4),
    .din31(sub_ln1456_fu_1051_p2),
    .dout(tmp_19_fu_1321_p33)
);

TrellisBuilder_mux_95_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 5 ),
    .dout_WIDTH( 1 ))
mux_95_1_1_1_U119(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(choice_reload),
    .din4(choice_1_reload),
    .din5(choice_2_reload),
    .din6(choice_3_reload),
    .din7(choice_4_reload),
    .din8(choice_5_reload),
    .din9(sub_ln1456_fu_1051_p2),
    .dout(tmp_20_fu_2160_p11)
);

TrellisBuilder_mux_95_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 5 ),
    .dout_WIDTH( 1 ))
mux_95_1_1_1_U120(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(choice_23_reload),
    .din4(choice_24_reload),
    .din5(choice_25_reload),
    .din6(choice_26_reload),
    .din7(choice_27_reload),
    .din8(choice_28_reload),
    .din9(sub_ln1456_fu_1051_p2),
    .dout(tmp_21_fu_2184_p11)
);

TrellisBuilder_mux_95_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 5 ),
    .dout_WIDTH( 1 ))
mux_95_1_1_1_U121(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(choice_43_reload),
    .din4(choice_44_reload),
    .din5(choice_45_reload),
    .din6(choice_46_reload),
    .din7(choice_47_reload),
    .din8(choice_42_reload),
    .din9(sub_ln1456_fu_1051_p2),
    .dout(tmp_22_fu_2208_p11)
);

TrellisBuilder_mux_95_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 5 ),
    .dout_WIDTH( 1 ))
mux_95_1_1_1_U122(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(choice_41_reload),
    .din4(choice_40_reload),
    .din5(choice_39_reload),
    .din6(choice_38_reload),
    .din7(choice_37_reload),
    .din8(choice_36_reload),
    .din9(sub_ln1456_fu_1051_p2),
    .dout(tmp_23_fu_2232_p11)
);

TrellisBuilder_mux_95_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 5 ),
    .dout_WIDTH( 1 ))
mux_95_1_1_1_U123(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(choice_35_reload),
    .din4(choice_34_reload),
    .din5(choice_33_reload),
    .din6(choice_32_reload),
    .din7(choice_31_reload),
    .din8(choice_30_reload),
    .din9(sub_ln1456_fu_1051_p2),
    .dout(tmp_24_fu_2256_p11)
);

TrellisBuilder_mux_95_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 5 ),
    .dout_WIDTH( 1 ))
mux_95_1_1_1_U124(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(choice_29_reload),
    .din4(choice_22_reload),
    .din5(choice_21_reload),
    .din6(choice_20_reload),
    .din7(choice_19_reload),
    .din8(choice_18_reload),
    .din9(sub_ln1456_fu_1051_p2),
    .dout(tmp_25_fu_2280_p11)
);

TrellisBuilder_mux_95_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 5 ),
    .dout_WIDTH( 1 ))
mux_95_1_1_1_U125(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(choice_17_reload),
    .din4(choice_16_reload),
    .din5(choice_15_reload),
    .din6(choice_14_reload),
    .din7(choice_13_reload),
    .din8(choice_12_reload),
    .din9(sub_ln1456_fu_1051_p2),
    .dout(tmp_26_fu_2304_p11)
);

TrellisBuilder_mux_95_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 5 ),
    .dout_WIDTH( 1 ))
mux_95_1_1_1_U126(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(choice_11_reload),
    .din4(choice_10_reload),
    .din5(choice_9_reload),
    .din6(choice_8_reload),
    .din7(choice_7_reload),
    .din8(choice_6_reload),
    .din9(sub_ln1456_fu_1051_p2),
    .dout(tmp_27_fu_2328_p11)
);

TrellisBuilder_mux_83_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_83_1_1_1_U127(
    .din0(tmp_20_reg_2494),
    .din1(tmp_21_reg_2499),
    .din2(tmp_22_reg_2504),
    .din3(tmp_23_reg_2509),
    .din4(tmp_24_reg_2514),
    .din5(tmp_25_reg_2519),
    .din6(tmp_26_reg_2524),
    .din7(tmp_27_reg_2529),
    .din8(Bucket_V_1_fu_398),
    .dout(p_Repl2_s_fu_2382_p10)
);

TrellisBuilder_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((1'b1 == ap_condition_1299)) begin
            Bucket_V_1_fu_398 <= 3'd0;
        end else if ((1'b1 == ap_condition_1296)) begin
            Bucket_V_1_fu_398 <= 3'd1;
        end else if ((1'b1 == ap_condition_1292)) begin
            Bucket_V_1_fu_398 <= 3'd2;
        end else if ((1'b1 == ap_condition_1287)) begin
            Bucket_V_1_fu_398 <= 3'd3;
        end else if ((1'b1 == ap_condition_1281)) begin
            Bucket_V_1_fu_398 <= 3'd4;
        end else if ((1'b1 == ap_condition_1274)) begin
            Bucket_V_1_fu_398 <= 3'd5;
        end else if ((1'b1 == ap_condition_1266)) begin
            Bucket_V_1_fu_398 <= 3'd6;
        end else if ((1'b1 == ap_condition_1257)) begin
            Bucket_V_1_fu_398 <= select_ln1484_fu_2112_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            Bucket_V_1_fu_398 <= Bucket_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1453_fu_1036_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            count_fu_414 <= add_ln1492_fu_1042_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            count_fu_414 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_fu_406 <= 6'd27;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            k_fu_406 <= k_1_fu_2406_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_Val2_s_fu_410 <= p_Result_s;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            p_Val2_s_fu_410 <= p_Result_1_fu_2396_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1453_fu_1036_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        prevState2_V_fu_402 <= trunc_ln1453_fu_2352_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1453_fu_1036_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_20_reg_2494 <= tmp_20_fu_2160_p11;
        tmp_21_reg_2499 <= tmp_21_fu_2184_p11;
        tmp_22_reg_2504 <= tmp_22_fu_2208_p11;
        tmp_23_reg_2509 <= tmp_23_fu_2232_p11;
        tmp_24_reg_2514 <= tmp_24_fu_2256_p11;
        tmp_25_reg_2519 <= tmp_25_fu_2280_p11;
        tmp_26_reg_2524 <= tmp_26_fu_2304_p11;
        tmp_27_reg_2529 <= tmp_27_fu_2328_p11;
    end
end

always @ (*) begin
    if (((icmp_ln1453_fu_1036_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_Bucket_V_1_load = Bucket_V;
    end else begin
        ap_sig_allocacmp_Bucket_V_1_load = Bucket_V_1_fu_398;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_count_1 = 5'd0;
    end else begin
        ap_sig_allocacmp_count_1 = count_fu_414;
    end
end

always @ (*) begin
    if (((icmp_ln1453_fu_1036_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Val2_1_out_ap_vld = 1'b1;
    end else begin
        p_Val2_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1492_fu_1042_p2 = (ap_sig_allocacmp_count_1 + 5'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1257 = ((icmp_ln1453_fu_1036_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (empty_131_fu_2013_p2 == 1'd0) & (empty_116_fu_1923_p2 == 1'd0) & (empty_101_fu_1833_p2 == 1'd0) & (empty_86_fu_1743_p2 == 1'd0) & (empty_71_fu_1653_p2 == 1'd0) & (empty_56_fu_1563_p2 == 1'd0) & (empty_41_fu_1473_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_1266 = ((icmp_ln1453_fu_1036_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (empty_131_fu_2013_p2 == 1'd1) & (empty_116_fu_1923_p2 == 1'd0) & (empty_101_fu_1833_p2 == 1'd0) & (empty_86_fu_1743_p2 == 1'd0) & (empty_71_fu_1653_p2 == 1'd0) & (empty_56_fu_1563_p2 == 1'd0) & (empty_41_fu_1473_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_1274 = ((icmp_ln1453_fu_1036_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (empty_116_fu_1923_p2 == 1'd1) & (empty_101_fu_1833_p2 == 1'd0) & (empty_86_fu_1743_p2 == 1'd0) & (empty_71_fu_1653_p2 == 1'd0) & (empty_56_fu_1563_p2 == 1'd0) & (empty_41_fu_1473_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_1281 = ((icmp_ln1453_fu_1036_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (empty_101_fu_1833_p2 == 1'd1) & (empty_86_fu_1743_p2 == 1'd0) & (empty_71_fu_1653_p2 == 1'd0) & (empty_56_fu_1563_p2 == 1'd0) & (empty_41_fu_1473_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_1287 = ((icmp_ln1453_fu_1036_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (empty_86_fu_1743_p2 == 1'd1) & (empty_71_fu_1653_p2 == 1'd0) & (empty_56_fu_1563_p2 == 1'd0) & (empty_41_fu_1473_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_1292 = ((icmp_ln1453_fu_1036_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (empty_71_fu_1653_p2 == 1'd1) & (empty_56_fu_1563_p2 == 1'd0) & (empty_41_fu_1473_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_1296 = ((icmp_ln1453_fu_1036_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (empty_56_fu_1563_p2 == 1'd1) & (empty_41_fu_1473_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_1299 = ((icmp_ln1453_fu_1036_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (empty_41_fu_1473_p2 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_100_fu_1827_p2 = (empty_99_fu_1821_p2 | empty_93_fu_1785_p2);

assign empty_101_fu_1833_p2 = (empty_95_fu_1797_p2 | empty_100_fu_1827_p2);

assign empty_102_fu_1839_p2 = ((tmp_19_fu_1321_p33 == 6'd58) ? 1'b1 : 1'b0);

assign empty_103_fu_1845_p2 = ((tmp_19_fu_1321_p33 == 6'd55) ? 1'b1 : 1'b0);

assign empty_104_fu_1851_p2 = ((tmp_19_fu_1321_p33 == 6'd43) ? 1'b1 : 1'b0);

assign empty_105_fu_1857_p2 = ((tmp_19_fu_1321_p33 == 6'd38) ? 1'b1 : 1'b0);

assign empty_106_fu_1863_p2 = ((tmp_19_fu_1321_p33 == 6'd25) ? 1'b1 : 1'b0);

assign empty_107_fu_1869_p2 = ((tmp_19_fu_1321_p33 == 6'd20) ? 1'b1 : 1'b0);

assign empty_108_fu_1875_p2 = ((tmp_19_fu_1321_p33 == 6'd8) ? 1'b1 : 1'b0);

assign empty_109_fu_1881_p2 = (empty_103_fu_1845_p2 | empty_102_fu_1839_p2);

assign empty_110_fu_1887_p2 = ((tmp_19_fu_1321_p33 == 6'd5) ? 1'b1 : 1'b0);

assign empty_111_fu_1893_p2 = (empty_109_fu_1881_p2 | empty_104_fu_1851_p2);

assign empty_112_fu_1899_p2 = (empty_111_fu_1893_p2 | empty_105_fu_1857_p2);

assign empty_113_fu_1905_p2 = (empty_112_fu_1899_p2 | empty_106_fu_1863_p2);

assign empty_114_fu_1911_p2 = (empty_113_fu_1905_p2 | empty_107_fu_1869_p2);

assign empty_115_fu_1917_p2 = (empty_114_fu_1911_p2 | empty_108_fu_1875_p2);

assign empty_116_fu_1923_p2 = (empty_115_fu_1917_p2 | empty_110_fu_1887_p2);

assign empty_117_fu_1929_p2 = ((tmp_19_fu_1321_p33 == 6'd57) ? 1'b1 : 1'b0);

assign empty_118_fu_1935_p2 = ((tmp_19_fu_1321_p33 == 6'd52) ? 1'b1 : 1'b0);

assign empty_119_fu_1941_p2 = ((tmp_19_fu_1321_p33 == 6'd40) ? 1'b1 : 1'b0);

assign empty_120_fu_1947_p2 = ((tmp_19_fu_1321_p33 == 6'd37) ? 1'b1 : 1'b0);

assign empty_121_fu_1953_p2 = ((tmp_19_fu_1321_p33 == 6'd26) ? 1'b1 : 1'b0);

assign empty_122_fu_1959_p2 = ((tmp_19_fu_1321_p33 == 6'd23) ? 1'b1 : 1'b0);

assign empty_123_fu_1965_p2 = ((tmp_19_fu_1321_p33 == 6'd11) ? 1'b1 : 1'b0);

assign empty_124_fu_1971_p2 = (empty_118_fu_1935_p2 | empty_117_fu_1929_p2);

assign empty_125_fu_1977_p2 = ((tmp_19_fu_1321_p33 == 6'd6) ? 1'b1 : 1'b0);

assign empty_126_fu_1983_p2 = (empty_124_fu_1971_p2 | empty_119_fu_1941_p2);

assign empty_127_fu_1989_p2 = (empty_126_fu_1983_p2 | empty_120_fu_1947_p2);

assign empty_128_fu_1995_p2 = (empty_127_fu_1989_p2 | empty_121_fu_1953_p2);

assign empty_129_fu_2001_p2 = (empty_128_fu_1995_p2 | empty_122_fu_1959_p2);

assign empty_130_fu_2007_p2 = (empty_129_fu_2001_p2 | empty_123_fu_1965_p2);

assign empty_131_fu_2013_p2 = (empty_130_fu_2007_p2 | empty_125_fu_1977_p2);

assign empty_27_fu_1389_p2 = ((tmp_19_fu_1321_p33 == 6'd63) ? 1'b1 : 1'b0);

assign empty_28_fu_1395_p2 = ((tmp_19_fu_1321_p33 == 6'd50) ? 1'b1 : 1'b0);

assign empty_29_fu_1401_p2 = ((tmp_19_fu_1321_p33 == 6'd46) ? 1'b1 : 1'b0);

assign empty_30_fu_1407_p2 = ((tmp_19_fu_1321_p33 == 6'd35) ? 1'b1 : 1'b0);

assign empty_31_fu_1413_p2 = ((tmp_19_fu_1321_p33 == 6'd28) ? 1'b1 : 1'b0);

assign empty_32_fu_1419_p2 = ((tmp_19_fu_1321_p33 == 6'd17) ? 1'b1 : 1'b0);

assign empty_33_fu_1425_p2 = ((tmp_19_fu_1321_p33 == 6'd13) ? 1'b1 : 1'b0);

assign empty_34_fu_1431_p2 = (empty_28_fu_1395_p2 | empty_27_fu_1389_p2);

assign empty_35_fu_1437_p2 = ((tmp_19_fu_1321_p33 == 6'd0) ? 1'b1 : 1'b0);

assign empty_36_fu_1443_p2 = (empty_34_fu_1431_p2 | empty_29_fu_1401_p2);

assign empty_37_fu_1449_p2 = (empty_36_fu_1443_p2 | empty_30_fu_1407_p2);

assign empty_38_fu_1455_p2 = (empty_37_fu_1449_p2 | empty_31_fu_1413_p2);

assign empty_39_fu_1461_p2 = (empty_38_fu_1455_p2 | empty_32_fu_1419_p2);

assign empty_40_fu_1467_p2 = (empty_39_fu_1461_p2 | empty_33_fu_1425_p2);

assign empty_41_fu_1473_p2 = (empty_40_fu_1467_p2 | empty_35_fu_1437_p2);

assign empty_42_fu_1479_p2 = ((tmp_19_fu_1321_p33 == 6'd62) ? 1'b1 : 1'b0);

assign empty_43_fu_1485_p2 = ((tmp_19_fu_1321_p33 == 6'd51) ? 1'b1 : 1'b0);

assign empty_44_fu_1491_p2 = ((tmp_19_fu_1321_p33 == 6'd47) ? 1'b1 : 1'b0);

assign empty_45_fu_1497_p2 = ((tmp_19_fu_1321_p33 == 6'd34) ? 1'b1 : 1'b0);

assign empty_46_fu_1503_p2 = ((tmp_19_fu_1321_p33 == 6'd29) ? 1'b1 : 1'b0);

assign empty_47_fu_1509_p2 = ((tmp_19_fu_1321_p33 == 6'd16) ? 1'b1 : 1'b0);

assign empty_48_fu_1515_p2 = ((tmp_19_fu_1321_p33 == 6'd12) ? 1'b1 : 1'b0);

assign empty_49_fu_1521_p2 = (empty_43_fu_1485_p2 | empty_42_fu_1479_p2);

assign empty_50_fu_1527_p2 = ((tmp_19_fu_1321_p33 == 6'd1) ? 1'b1 : 1'b0);

assign empty_51_fu_1533_p2 = (empty_49_fu_1521_p2 | empty_44_fu_1491_p2);

assign empty_52_fu_1539_p2 = (empty_51_fu_1533_p2 | empty_45_fu_1497_p2);

assign empty_53_fu_1545_p2 = (empty_52_fu_1539_p2 | empty_46_fu_1503_p2);

assign empty_54_fu_1551_p2 = (empty_53_fu_1545_p2 | empty_47_fu_1509_p2);

assign empty_55_fu_1557_p2 = (empty_54_fu_1551_p2 | empty_48_fu_1515_p2);

assign empty_56_fu_1563_p2 = (empty_55_fu_1557_p2 | empty_50_fu_1527_p2);

assign empty_57_fu_1569_p2 = ((tmp_19_fu_1321_p33 == 6'd61) ? 1'b1 : 1'b0);

assign empty_58_fu_1575_p2 = ((tmp_19_fu_1321_p33 == 6'd48) ? 1'b1 : 1'b0);

assign empty_59_fu_1581_p2 = ((tmp_19_fu_1321_p33 == 6'd44) ? 1'b1 : 1'b0);

assign empty_60_fu_1587_p2 = ((tmp_19_fu_1321_p33 == 6'd33) ? 1'b1 : 1'b0);

assign empty_61_fu_1593_p2 = ((tmp_19_fu_1321_p33 == 6'd30) ? 1'b1 : 1'b0);

assign empty_62_fu_1599_p2 = ((tmp_19_fu_1321_p33 == 6'd19) ? 1'b1 : 1'b0);

assign empty_63_fu_1605_p2 = ((tmp_19_fu_1321_p33 == 6'd15) ? 1'b1 : 1'b0);

assign empty_64_fu_1611_p2 = (empty_58_fu_1575_p2 | empty_57_fu_1569_p2);

assign empty_65_fu_1617_p2 = ((tmp_19_fu_1321_p33 == 6'd2) ? 1'b1 : 1'b0);

assign empty_66_fu_1623_p2 = (empty_64_fu_1611_p2 | empty_59_fu_1581_p2);

assign empty_67_fu_1629_p2 = (empty_66_fu_1623_p2 | empty_60_fu_1587_p2);

assign empty_68_fu_1635_p2 = (empty_67_fu_1629_p2 | empty_61_fu_1593_p2);

assign empty_69_fu_1641_p2 = (empty_68_fu_1635_p2 | empty_62_fu_1599_p2);

assign empty_70_fu_1647_p2 = (empty_69_fu_1641_p2 | empty_63_fu_1605_p2);

assign empty_71_fu_1653_p2 = (empty_70_fu_1647_p2 | empty_65_fu_1617_p2);

assign empty_72_fu_1659_p2 = ((tmp_19_fu_1321_p33 == 6'd60) ? 1'b1 : 1'b0);

assign empty_73_fu_1665_p2 = ((tmp_19_fu_1321_p33 == 6'd49) ? 1'b1 : 1'b0);

assign empty_74_fu_1671_p2 = ((tmp_19_fu_1321_p33 == 6'd45) ? 1'b1 : 1'b0);

assign empty_75_fu_1677_p2 = ((tmp_19_fu_1321_p33 == 6'd32) ? 1'b1 : 1'b0);

assign empty_76_fu_1683_p2 = ((tmp_19_fu_1321_p33 == 6'd31) ? 1'b1 : 1'b0);

assign empty_77_fu_1689_p2 = ((tmp_19_fu_1321_p33 == 6'd18) ? 1'b1 : 1'b0);

assign empty_78_fu_1695_p2 = ((tmp_19_fu_1321_p33 == 6'd14) ? 1'b1 : 1'b0);

assign empty_79_fu_1701_p2 = (empty_73_fu_1665_p2 | empty_72_fu_1659_p2);

assign empty_80_fu_1707_p2 = ((tmp_19_fu_1321_p33 == 6'd3) ? 1'b1 : 1'b0);

assign empty_81_fu_1713_p2 = (empty_79_fu_1701_p2 | empty_74_fu_1671_p2);

assign empty_82_fu_1719_p2 = (empty_81_fu_1713_p2 | empty_75_fu_1677_p2);

assign empty_83_fu_1725_p2 = (empty_82_fu_1719_p2 | empty_76_fu_1683_p2);

assign empty_84_fu_1731_p2 = (empty_83_fu_1725_p2 | empty_77_fu_1689_p2);

assign empty_85_fu_1737_p2 = (empty_84_fu_1731_p2 | empty_78_fu_1695_p2);

assign empty_86_fu_1743_p2 = (empty_85_fu_1737_p2 | empty_80_fu_1707_p2);

assign empty_87_fu_1749_p2 = ((tmp_19_fu_1321_p33 == 6'd59) ? 1'b1 : 1'b0);

assign empty_88_fu_1755_p2 = ((tmp_19_fu_1321_p33 == 6'd54) ? 1'b1 : 1'b0);

assign empty_89_fu_1761_p2 = ((tmp_19_fu_1321_p33 == 6'd42) ? 1'b1 : 1'b0);

assign empty_90_fu_1767_p2 = ((tmp_19_fu_1321_p33 == 6'd39) ? 1'b1 : 1'b0);

assign empty_91_fu_1773_p2 = ((tmp_19_fu_1321_p33 == 6'd24) ? 1'b1 : 1'b0);

assign empty_92_fu_1779_p2 = ((tmp_19_fu_1321_p33 == 6'd21) ? 1'b1 : 1'b0);

assign empty_93_fu_1785_p2 = ((tmp_19_fu_1321_p33 == 6'd9) ? 1'b1 : 1'b0);

assign empty_94_fu_1791_p2 = (empty_88_fu_1755_p2 | empty_87_fu_1749_p2);

assign empty_95_fu_1797_p2 = ((tmp_19_fu_1321_p33 == 6'd4) ? 1'b1 : 1'b0);

assign empty_96_fu_1803_p2 = (empty_94_fu_1791_p2 | empty_89_fu_1761_p2);

assign empty_97_fu_1809_p2 = (empty_96_fu_1803_p2 | empty_90_fu_1767_p2);

assign empty_98_fu_1815_p2 = (empty_97_fu_1809_p2 | empty_91_fu_1773_p2);

assign empty_99_fu_1821_p2 = (empty_98_fu_1815_p2 | empty_92_fu_1779_p2);

assign icmp_ln1065_1_fu_2028_p2 = ((tmp_19_fu_1321_p33 == 6'd10) ? 1'b1 : 1'b0);

assign icmp_ln1065_2_fu_2034_p2 = ((tmp_19_fu_1321_p33 == 6'd22) ? 1'b1 : 1'b0);

assign icmp_ln1065_3_fu_2040_p2 = ((tmp_19_fu_1321_p33 == 6'd27) ? 1'b1 : 1'b0);

assign icmp_ln1065_4_fu_2046_p2 = ((tmp_19_fu_1321_p33 == 6'd36) ? 1'b1 : 1'b0);

assign icmp_ln1065_5_fu_2052_p2 = ((tmp_19_fu_1321_p33 == 6'd41) ? 1'b1 : 1'b0);

assign icmp_ln1065_6_fu_2058_p2 = ((tmp_19_fu_1321_p33 == 6'd53) ? 1'b1 : 1'b0);

assign icmp_ln1065_7_fu_2064_p2 = ((tmp_19_fu_1321_p33 == 6'd56) ? 1'b1 : 1'b0);

assign icmp_ln1065_fu_2022_p2 = ((tmp_19_fu_1321_p33 == 6'd7) ? 1'b1 : 1'b0);

assign icmp_ln1453_fu_1036_p2 = ((ap_sig_allocacmp_count_1 == 5'd28) ? 1'b1 : 1'b0);

assign k_1_fu_2406_p2 = ($signed(k_fu_406) + $signed(6'd63));

assign k_cast_fu_2369_p1 = k_fu_406;

assign or_ln1484_1_fu_2070_p2 = (icmp_ln1065_3_fu_2040_p2 | icmp_ln1065_2_fu_2034_p2);

assign or_ln1484_2_fu_2100_p2 = (or_ln1484_5_fu_2094_p2 | icmp_ln1065_fu_2022_p2);

assign or_ln1484_3_fu_2088_p2 = (icmp_ln1065_5_fu_2052_p2 | icmp_ln1065_4_fu_2046_p2);

assign or_ln1484_4_fu_2082_p2 = (icmp_ln1065_7_fu_2064_p2 | icmp_ln1065_6_fu_2058_p2);

assign or_ln1484_5_fu_2094_p2 = (or_ln1484_4_fu_2082_p2 | or_ln1484_3_fu_2088_p2);

assign or_ln1484_6_fu_2106_p2 = (or_ln1484_fu_2076_p2 | or_ln1484_2_fu_2100_p2);

assign or_ln1484_fu_2076_p2 = (or_ln1484_1_fu_2070_p2 | icmp_ln1065_1_fu_2028_p2);

always @ (*) begin
    p_Result_1_fu_2396_p4 = p_Val2_s_fu_410;
    p_Result_1_fu_2396_p4[k_cast_fu_2369_p1] = |(p_Repl2_s_fu_2382_p10);
end

assign p_Val2_1_out = p_Val2_s_fu_410;

assign select_ln1484_fu_2112_p3 = ((or_ln1484_6_fu_2106_p2[0:0] == 1'b1) ? 3'd7 : ap_sig_allocacmp_Bucket_V_1_load);

assign sub_ln1456_fu_1051_p2 = ($signed(5'd30) - $signed(ap_sig_allocacmp_count_1));

assign tmp_1_fu_1135_p3 = prevState2_V_fu_402[32'd2];

assign tmp_2_fu_1173_p3 = prevState2_V_fu_402[32'd2];

assign tmp_3_fu_1211_p3 = prevState2_V_fu_402[32'd2];

assign tmp_4_fu_1249_p3 = prevState2_V_fu_402[32'd2];

assign tmp_5_fu_1287_p3 = prevState2_V_fu_402[32'd2];

assign tmp_6_fu_1311_p3 = prevState2_V_fu_402[32'd2];

assign tmp_fu_1097_p3 = prevState2_V_fu_402[32'd2];

assign trunc_ln1065_fu_1065_p1 = prevState2_V_fu_402[1:0];

assign trunc_ln1453_fu_2352_p1 = tmp_19_fu_1321_p33[2:0];

endmodule //TrellisBuilder_TrellisBuilder_Pipeline_VITIS_LOOP_1453_1
